{
	"name": "df_transform",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSV_wbs_element",
						"type": "DatasetReference"
					},
					"name": "ReadCSVwbsElement"
				},
				{
					"dataset": {
						"referenceName": "CSV_cost_element",
						"type": "DatasetReference"
					},
					"name": "ReadCOSTelement"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Target_table",
						"type": "DatasetReference"
					},
					"name": "TargetAzure"
				}
			],
			"transformations": [
				{
					"name": "addHash",
					"description": "Creating/updating the columns"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          WBS_ID as string,",
				"          COST_ELEM_CD as string,",
				"          WBS_ELEM_OC_AMT as string,",
				"          WBS_ELEM_CC_AMT as string,",
				"          OBJ_CRNCY_CD as string,",
				"          CNTRL_CRNCY_CD as string,",
				"          MONTH_NUM as string,",
				"          YEAR_NUM as string,",
				"          TXN_CRNCY_CD as string,",
				"          WBS_LVL_NUM as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200,",
				"     partitionBy('hash', 1)) ~> ReadCSVwbsElement",
				"source(output(",
				"          COST_ELEM_CD as string,",
				"          VAL_CAT_CD as string,",
				"          REV_IND as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadCOSTelement",
				"select1 derive(hash = sha1(columns())) ~> addHash",
				"addHash, ReadCOSTelement join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"ReadCSVwbsElement select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          FRCST_FINL_MO = MONTH_NUM,",
				"          FRCST_FINL_YR = YEAR_NUM,",
				"          OBJ_CRNCY_CD,",
				"          OBJ_AMT = WBS_ELEM_OC_AMT,",
				"          CONTRL_AMT = WBS_ELEM_CC_AMT,",
				"          CONTRL_CRNCY_CD = CNTRL_CRNCY_CD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> TargetAzure"
			]
		}
	}
}