{
	"name": "df_037",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S0P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S4P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S9P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S10P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S10P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S18P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S21P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S25P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S25P3"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S25P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V163S13P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V165S0P6"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V165S0P7"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sinkTable",
						"type": "DatasetReference"
					},
					"name": "V163S14",
					"description": "DLT"
				},
				{
					"dataset": {
						"referenceName": "ds_sinkTable",
						"type": "DatasetReference"
					},
					"name": "V163S15",
					"description": "UPD"
				},
				{
					"dataset": {
						"referenceName": "ds_sinkTable",
						"type": "DatasetReference"
					},
					"name": "V163S16",
					"description": "INS"
				}
			],
			"transformations": [
				{
					"name": "V165S0P5Join",
					"description": "Join_111"
				},
				{
					"name": "V165S0P5",
					"description": "BILLINGS"
				},
				{
					"name": "V163S0P1Derive",
					"description": "project_header_input21"
				},
				{
					"name": "V163S0P1",
					"description": "project_header_input21"
				},
				{
					"name": "V163S2P1Join",
					"description": "Join_119"
				},
				{
					"name": "V163S2P1",
					"description": "output6"
				},
				{
					"name": "V163S22P1",
					"description": "Aggregator_43"
				},
				{
					"name": "V163S5P1",
					"description": "Funnel_40"
				},
				{
					"name": "V163S6P2Derive",
					"description": "DSLink39"
				},
				{
					"name": "V163S6P2",
					"description": "DSLink39"
				},
				{
					"name": "V163S7P1Join",
					"description": "Join_30"
				},
				{
					"name": "V163S7P1",
					"description": "DSLink36"
				},
				{
					"name": "V163S9P1",
					"description": "Funnel_27"
				},
				{
					"name": "V163S18P2Join",
					"description": "Join_23"
				},
				{
					"name": "V163S18P2",
					"description": "DSLink26"
				},
				{
					"name": "V163S16P1Constraint",
					"description": "yj"
				},
				{
					"name": "V163S16P1Derive",
					"description": "insert"
				},
				{
					"name": "V163S16P1",
					"description": "insert"
				},
				{
					"name": "V163S15P1Constraint",
					"description": "yj"
				},
				{
					"name": "V163S15P1Derive",
					"description": "update"
				},
				{
					"name": "V163S15P1",
					"description": "update"
				},
				{
					"name": "V163S14P1Constraint",
					"description": "yj"
				},
				{
					"name": "V163S14P1Derive",
					"description": "delete"
				},
				{
					"name": "V163S14P1",
					"description": "delete"
				},
				{
					"name": "V163S28P1Join",
					"description": "Join_27"
				},
				{
					"name": "V163S28P1",
					"description": "DSLink22"
				},
				{
					"name": "V163S29P1Join",
					"description": "Change_Capture_32"
				},
				{
					"name": "V163S29P1Derive",
					"description": "DSLink35"
				},
				{
					"name": "V163S29P1",
					"description": "DSLink35"
				},
				{
					"name": "V163S21P2Derive",
					"description": "DSLink31"
				},
				{
					"name": "V163S21P2",
					"description": "DSLink31"
				},
				{
					"name": "V163S4P1",
					"description": "UNION_BILLINGS"
				},
				{
					"name": "V163S6P1Derive",
					"description": "DSLink20"
				},
				{
					"name": "V163S6P1",
					"description": "DSLink20"
				},
				{
					"name": "V163S17P1",
					"description": "DSLink9"
				},
				{
					"name": "V163S13P4",
					"description": "Copy_of_UNION_BILLINGS"
				}
			],
			"scriptLines": [
				"parameters{",
				"     p_IPPF_RULES_SCHEME as string",
				"}",
				"source(output(",
				"          CTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S0P2",
				"source(output(",
				"          SAP_CMPNY_CD1 as string,",
				"          CNTRCT_NUM as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S4P2",
				"source(output(",
				"          WBS_ID as string,",
				"          WBS_SHORT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S9P2",
				"source(output(",
				"          BILNG_DT as date,",
				"          CRNCY_CD as string,",
				"          BILNG_AMT as decimal(15,2),",
				"          WBS_SHORT_ID as string,",
				"          BILNG_MO as integer,",
				"          BILNG_YR as integer,",
				"          INV_AMT as decimal(13,2),",
				"          REV_MAJOR_CD as string,",
				"          REV_MINOR_CD as string,",
				"          BILABL_EXPNS_FLG as string,",
				"          INV_STAT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S10P2",
				"source(output(",
				"          WBS_SHORT_ID as string,",
				"          INV_AMT as decimal(13,2),",
				"          BILNG_AMT as decimal(15,2),",
				"          BILNG_DT as date,",
				"          CRNCY_CD as string,",
				"          REV_MAJOR_CD as string,",
				"          REV_MINOR_CD as string,",
				"          BILNG_MO as integer,",
				"          BILNG_YR as integer,",
				"          BILABL_EXPNS_FLG as string,",
				"          INV_STAT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S10P1",
				"source(output(",
				"          BUS_TYP_CD as string,",
				"          CTRY as string,",
				"          CMPNY_CD as string,",
				"          BILABL_EXPNS_FLG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S18P1",
				"source(output(",
				"          WRK_NUM as string,",
				"          HASH_CD as string,",
				"          BILNG_MO as integer,",
				"          BILNG_YR as integer,",
				"          INV_STAT as string,",
				"          BILABL_EXPNS_FLG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S21P1",
				"source(output(",
				"          CNTRCT_NUM as string,",
				"          CNTRCT_TYP as string,",
				"          CMPNY_CD as string,",
				"          INV_STAT as string,",
				"          CTRY as string,",
				"          WRK_NUM as string,",
				"          BILNG_AMT as decimal(20,2),",
				"          INV_AMT as decimal(20,2),",
				"          BILNG_MO as integer,",
				"          BILNG_DT as date,",
				"          INV_NUM as string,",
				"          SEQ_NUM as integer,",
				"          BILNG_TYP as string,",
				"          CHRG_TP as string,",
				"          BUS_TYP_CD as string,",
				"          INVTOCUSTNUMBER as string,",
				"          BILNG_YR as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S25P1",
				"source(output(",
				"          CNTRCT_NUM as string,",
				"          CNTRCT_TYP as string,",
				"          CMPNY_CD as string,",
				"          INV_STAT as string,",
				"          CTRY as string,",
				"          WRK_NUM as string,",
				"          BILNG_AMT as decimal(20,2),",
				"          INV_AMT as decimal(20,2),",
				"          BILNG_MO as integer,",
				"          INV_NUM as string,",
				"          BILNG_DT as date,",
				"          SEQ_NUM as integer,",
				"          CHRG_TP as string,",
				"          BUS_TYP_CD as string,",
				"          INVTOCUSTNUMBER as string,",
				"          BILNG_TYP as string,",
				"          BILNG_YR as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S25P3",
				"source(output(",
				"          CNTRCT_NUM as string,",
				"          CNTRCT_TYP as string,",
				"          CMPNY_CD as string,",
				"          INV_STAT as string,",
				"          CTRY as string,",
				"          WRK_NUM as string,",
				"          BILNG_AMT as decimal(20,2),",
				"          INV_AMT as decimal(20,2),",
				"          BILNG_MO as integer,",
				"          BILNG_DT as date,",
				"          INV_NUM as string,",
				"          SEQ_NUM as integer,",
				"          BILNG_TYP as string,",
				"          CHRG_TP as string,",
				"          BUS_TYP_CD as string,",
				"          INVTOCUSTNUMBER as string,",
				"          BILNG_YR as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S25P2",
				"source(output(",
				"          DUE_DT as date,",
				"          INVTOCUSTNUMBER as string,",
				"          INV_NUM as string,",
				"          CRNCY_CD as string,",
				"          SET_LD_DT as date,",
				"          CTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V163S13P2",
				"source(output(",
				"          CNTRCT_NUM as string,",
				"          CNTRCT_TYP as string,",
				"          CMPNY_CD as string,",
				"          INV_STAT as string,",
				"          CTRY as string,",
				"          WRK_NUM as string,",
				"          BILNG_AMT as decimal(20,2),",
				"          INV_AMT as decimal(20,2),",
				"          BILNG_MO as integer,",
				"          BILNG_DT as date,",
				"          INV_NUM as string,",
				"          SEQ_NUM as integer,",
				"          BILNG_TYP as string,",
				"          CHRG_TP as string,",
				"          BUS_TYP_CD as string,",
				"          INVTOCUSTNUMBER as string,",
				"          BILNG_YR as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V165S0P6",
				"source(output(",
				"          CNTRCT_NUM as string,",
				"          CNTRCT_TYP as string,",
				"          CMPNY_CD as string,",
				"          INV_STAT as string,",
				"          CTRY as string,",
				"          WRK_NUM as string,",
				"          BILNG_AMT as decimal(20,2),",
				"          INV_AMT as decimal(20,2),",
				"          BILNG_MO as integer,",
				"          INV_NUM as string,",
				"          BILNG_DT as date,",
				"          SEQ_NUM as integer,",
				"          CHRG_TP as string,",
				"          BUS_TYP_CD as string,",
				"          INVTOCUSTNUMBER as string,",
				"          BILNG_TYP as string,",
				"          BILNG_YR as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V165S0P7",
				"V163S0P1, V163S0P2 join(V163S0P1@CTRY == V163S0P2@CTRY,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V165S0P5Join",
				"V165S0P5Join select(mapColumn(",
				"          CNTRCT_NUM,",
				"          CNTRCT_TYP,",
				"          CMPNY_CD,",
				"          INV_STAT,",
				"          CTRY = V163S0P1@CTRY,",
				"          WRK_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_MO,",
				"          INV_NUM,",
				"          BILNG_DT,",
				"          SEQ_NUM,",
				"          BILNG_TYP,",
				"          CHRG_TP,",
				"          BUS_TYP_CD,",
				"          INVTOCUSTNUMBER,",
				"          BILNG_YR",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V165S0P5",
				"V163S2P1 derive(CTRY = case(!isNull(SAP_CMPNY_CD1) ,SAP_CMPNY_CD1,CTRY)) ~> V163S0P1Derive",
				"V163S0P1Derive select(mapColumn(",
				"          CNTRCT_NUM,",
				"          CNTRCT_TYP,",
				"          CMPNY_CD,",
				"          INV_STAT,",
				"          CTRY,",
				"          WRK_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_MO,",
				"          INV_NUM,",
				"          BILNG_DT,",
				"          SEQ_NUM,",
				"          BILNG_TYP,",
				"          CHRG_TP,",
				"          BUS_TYP_CD,",
				"          INVTOCUSTNUMBER,",
				"          BILNG_YR",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S0P1",
				"V163S4P1, V163S4P2 join(V163S4P1@CNTRCT_NUM == V163S4P2@CNTRCT_NUM,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V163S2P1Join",
				"V163S2P1Join select(mapColumn(",
				"          CNTRCT_NUM = V163S4P1@CNTRCT_NUM,",
				"          CNTRCT_TYP,",
				"          CMPNY_CD,",
				"          INV_STAT,",
				"          CTRY,",
				"          WRK_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_MO,",
				"          INV_NUM,",
				"          BILNG_DT,",
				"          SEQ_NUM,",
				"          BILNG_TYP,",
				"          CHRG_TP,",
				"          BUS_TYP_CD,",
				"          INVTOCUSTNUMBER,",
				"          BILNG_YR,",
				"          SAP_CMPNY_CD1",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S2P1",
				"V163S5P1 aggregate(groupBy(WRK_NUM,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          BILABL_EXPNS_FLG,",
				"          INV_STAT),",
				"     BILNG_AMT = toDecimal(sum(BILNG_AMT)),",
				"          SCHED_BIL = toDecimal(sum(SCHED_BIL)),",
				"          INV_AMT = toDecimal(sum(INV_AMT)),",
				"          CRNCY_CD = min(CRNCY_CD),",
				"          CHRG_TP = max(CHRG_TP),",
				"          BILNG_DT = min(BILNG_DT),",
				"          CMPNY_CD = max(CMPNY_CD)) ~> V163S22P1",
				"V163S6P1, V163S6P2 union(byName: true)~> V163S5P1",
				"V163S7P1 derive(BILABL_EXPNS_FLG = case(REV_MINOR_CD == '600','Y','N'),",
				"          SCHED_BIL = case(((BILNG_MO<month(currentDate() )  && BILNG_YR == year(currentDate() ) ) || (BILNG_YR<year(currentDate() ) )) && INV_STAT == 'M',BILNG_AMT,toDecimal(0.0)),",
				"          CHRG_TP = '',",
				"          CMPNY_CD = '') ~> V163S6P2Derive",
				"V163S6P2Derive select(mapColumn(",
				"          WRK_NUM = WBS_ID,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          BILNG_DT,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          CRNCY_CD,",
				"          BILABL_EXPNS_FLG,",
				"          SCHED_BIL,",
				"          CHRG_TP,",
				"          INV_STAT,",
				"          CMPNY_CD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S6P2",
				"V163S9P1, V163S9P2 join(V163S9P1@WBS_SHORT_ID == V163S9P2@WBS_SHORT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V163S7P1Join",
				"V163S7P1Join select(mapColumn(",
				"          WBS_ID,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          BILNG_DT,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          CRNCY_CD,",
				"          REV_MAJOR_CD,",
				"          REV_MINOR_CD,",
				"          BILABL_EXPNS_FLG,",
				"          INV_STAT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S7P1",
				"V163S10P1, V163S10P2 union(byName: true)~> V163S9P1",
				"V163S13P4, V163S13P2 join(V163S13P4@CTRY == V163S13P2@CTRY,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V163S18P2Join",
				"V163S18P2Join select(mapColumn(",
				"          CNTRCT_NUM,",
				"          CNTRCT_TYP,",
				"          CMPNY_CD,",
				"          INV_STAT,",
				"          CTRY = V163S13P4@CTRY,",
				"          WRK_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_MO,",
				"          INV_NUM = V163S13P4@INV_NUM,",
				"          BILNG_DT,",
				"          SEQ_NUM,",
				"          BILNG_TYP,",
				"          CHRG_TP,",
				"          BUS_TYP_CD,",
				"          INVTOCUSTNUMBER = V163S13P4@INVTOCUSTNUMBER,",
				"          BILNG_YR,",
				"          DUE_DT,",
				"          CRNCY_CD,",
				"          SET_LD_DT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S18P2",
				"V163S17P1 filter(CHANGE_CODE == 1) ~> V163S16P1Constraint",
				"V163S16P1Constraint derive(LST_CHG_TMS = currentUTC()) ~> V163S16P1Derive",
				"V163S16P1Derive select(mapColumn(",
				"          LST_CHG_TMS,",
				"          CMPNY_CD,",
				"          INV_STAT,",
				"          WRK_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          BILNG_DT,",
				"          CHRG_TP,",
				"          CRNCY_CD,",
				"          HASH_CD,",
				"          BILABL_EXPNS_FLG,",
				"          SCHED_BIL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S16P1",
				"V163S17P1 filter(CHANGE_CODE == 3) ~> V163S15P1Constraint",
				"V163S15P1Constraint derive(LST_CHG_TMS = currentUTC()) ~> V163S15P1Derive",
				"V163S15P1Derive select(mapColumn(",
				"          LST_CHG_TMS,",
				"          CMPNY_CD,",
				"          INV_STAT,",
				"          WRK_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          BILNG_DT,",
				"          CHRG_TP,",
				"          CRNCY_CD,",
				"          HASH_CD,",
				"          BILABL_EXPNS_FLG,",
				"          SCHED_BIL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S15P1",
				"V163S17P1 filter(CHANGE_CODE == 2) ~> V163S14P1Constraint",
				"V163S14P1Constraint derive(LST_CHG_TMS = currentUTC()) ~> V163S14P1Derive",
				"V163S14P1Derive select(mapColumn(",
				"          LST_CHG_TMS,",
				"          WRK_NUM,",
				"          HASH_CD,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          INV_STAT,",
				"          BILABL_EXPNS_FLG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S14P1",
				"V163S18P1, V163S18P2 join(V163S18P1@BUS_TYP_CD == V163S18P2@BUS_TYP_CD,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V163S28P1Join",
				"V163S28P1Join select(mapColumn(",
				"          BILABL_EXPNS_FLG,",
				"          CNTRCT_NUM,",
				"          CNTRCT_TYP,",
				"          CMPNY_CD = V163S18P2@CMPNY_CD,",
				"          INV_STAT,",
				"          CTRY = V163S18P2@CTRY,",
				"          WRK_NUM,",
				"          INV_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_MO,",
				"          BILNG_DT,",
				"          SEQ_NUM,",
				"          BILNG_TYP,",
				"          CHRG_TP,",
				"          BUS_TYP_CD = V163S18P2@BUS_TYP_CD,",
				"          DUE_DT,",
				"          CRNCY_CD,",
				"          SET_LD_DT,",
				"          INVTOCUSTNUMBER,",
				"          BILNG_YR",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S28P1",
				"V163S21P1, V163S21P2 join(V163S21P1@WRK_NUM == V163S21P2@WRK_NUM",
				"     && V163S21P1@BILNG_YR == V163S21P2@BILNG_YR",
				"     && V163S21P1@BILNG_MO == V163S21P2@BILNG_MO",
				"     && V163S21P1@INV_STAT == V163S21P2@INV_STAT",
				"     && V163S21P1@BILABL_EXPNS_FLG == V163S21P2@BILABL_EXPNS_FLG,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V163S29P1Join",
				"V163S29P1Join derive(CHANGE_CODE = case(isNull(V163S21P1@WRK_NUM) ,2,case(isNull(V163S21P2@WRK_NUM) ,1,case(notEquals(V163S21P1@HASH_CD,V163S21P2@HASH_CD),3,0)))) ~> V163S29P1Derive",
				"V163S29P1Derive select(mapColumn(",
				"          CHANGE_CODE,",
				"          WRK_NUM = V163S21P2@WRK_NUM,",
				"          BILNG_MO = V163S21P2@BILNG_MO,",
				"          BILNG_YR = V163S21P2@BILNG_YR,",
				"          BILNG_DT,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          CRNCY_CD,",
				"          SCHED_BIL,",
				"          BILABL_EXPNS_FLG = V163S21P2@BILABL_EXPNS_FLG,",
				"          HASH_CD = V163S21P2@HASH_CD,",
				"          CHRG_TP,",
				"          INV_STAT = V163S21P2@INV_STAT,",
				"          CMPNY_CD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S29P1",
				"V163S22P1 derive(HASH_CD = md5(columns() )) ~> V163S21P2Derive",
				"V163S21P2Derive select(mapColumn(",
				"          WRK_NUM,",
				"          BILNG_DT,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          BILABL_EXPNS_FLG,",
				"          BILNG_AMT,",
				"          SCHED_BIL,",
				"          HASH_CD,",
				"          INV_AMT,",
				"          CRNCY_CD,",
				"          INV_STAT,",
				"          CHRG_TP,",
				"          CMPNY_CD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S21P2",
				"V163S25P1, V163S25P2, V163S25P3 union(byName: true)~> V163S4P1",
				"V163S28P1 derive(BILABL_EXPNS_FLG = case((INV_STAT == 'I' || INV_STAT == 'B' || INV_STAT == 'M' || INV_STAT == 'T') && BILABL_EXPNS_FLG == 'N','N','Y'),",
				"          SCHED_BIL = case(((BILNG_MO<month(currentDate() )  && BILNG_YR == year(currentDate() ) ) || (BILNG_YR<year(currentDate() ) )) && INV_STAT == 'M',BILNG_AMT + 5.0,toDecimal(0.0))) ~> V163S6P1Derive",
				"V163S6P1Derive select(mapColumn(",
				"          CNTRCT_NUM,",
				"          CNTRCT_TYP,",
				"          CMPNY_CD,",
				"          INV_STAT,",
				"          CTRY,",
				"          WRK_NUM,",
				"          INV_NUM,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          BILNG_DT,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          SEQ_NUM,",
				"          BILNG_TYP,",
				"          CHRG_TP,",
				"          BUS_TYP_CD,",
				"          DUE_DT,",
				"          CRNCY_CD,",
				"          SET_LD_DT,",
				"          INVTOCUSTNUMBER,",
				"          BILABL_EXPNS_FLG,",
				"          SCHED_BIL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S6P1",
				"V163S29P1 select(mapColumn(",
				"          WRK_NUM,",
				"          BILNG_DT,",
				"          CMPNY_CD,",
				"          BILNG_MO,",
				"          BILNG_YR,",
				"          BILNG_AMT,",
				"          INV_AMT,",
				"          CRNCY_CD,",
				"          BILABL_EXPNS_FLG,",
				"          HASH_CD,",
				"          CHANGE_CODE,",
				"          CHRG_TP,",
				"          INV_STAT,",
				"          SCHED_BIL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V163S17P1",
				"V165S0P5, V165S0P6, V165S0P7 union(byName: true)~> V163S13P4",
				"V163S14P1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:[(\"DELETE FROM  \" + $p_IPPF_RULES_SCHEME + \".WBS_BILLING_LOAD\")],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> V163S14",
				"V163S15P1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:[(\"DELETE FROM  \" + $p_IPPF_RULES_SCHEME + \".WBS_BILLING_LOAD\")],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError') ~> V163S15",
				"V163S16P1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:[(\"DELETE FROM  \" + $p_IPPF_RULES_SCHEME + \".WBS_BILLING_LOAD\")],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 3,",
				"     errorHandlingOption: 'stopOnFirstError') ~> V163S16"
			]
		}
	}
}