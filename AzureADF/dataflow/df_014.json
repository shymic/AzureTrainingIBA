{
	"name": "df_014",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V137S4P1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sinkTable",
						"type": "DatasetReference"
					},
					"name": "V137S3",
					"description": "SEAT_USER_LOAD"
				}
			],
			"transformations": [
				{
					"name": "Filter"
				},
				{
					"name": "V137S3P1",
					"description": "union - DS V137S1"
				},
				{
					"name": "V137S1P1",
					"description": "aggregate - DS V137S2"
				},
				{
					"name": "V137S0P1Derive",
					"description": "derive - DS V137S4"
				},
				{
					"name": "V137S0P1",
					"description": "select  - DS V137S4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CNUM as string,",
				"          EMP_EMAIL_ADDR_TXT as string,",
				"          EMP_NAME as string,",
				"          RPT_FAMILY_ID as string,",
				"          DIM_ID as string,",
				"          DIM_SRC_ID as string,",
				"          DIM_LVL_ID as string,",
				"          DIM_LVL_VAL_ID as string,",
				"          AUTHORIZED_BY_ID as string,",
				"          AUTHORIZED_TS as date,",
				"          LAST_UPDT_TS as date,",
				"          RPT_FAM_REQ_ID as integer,",
				"          REQ_AD_HOC as string,",
				"          REQ_AD_HOC_MVSID as string,",
				"          REQ_AD_HOC_APPR_TS as date,",
				"          ASSOC_WITH_DIM_ID as string,",
				"          ASSOC_WITH_VAL_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V137S4P1",
				"V137S0P1 split(DIM_LVL_ID=='PI2',",
				"     disjoint: false) ~> Filter@(V137S2P1, V137S1P2)",
				"V137S1P1, Filter@V137S2P1 union(byName: true)~> V137S3P1",
				"Filter@V137S1P2 aggregate(groupBy(DIM_ID,",
				"          RPT_FAMILY_ID,",
				"          ASSOC_WITH_VAL_ID,",
				"          CNUM,",
				"          DIM_LVL_ID),",
				"     each(match(name!='DIM_ID'&&name!='RPT_FAMILY_ID'&&name!='ASSOC_WITH_VAL_ID'&&name!='CNUM'&&name!='DIM_LVL_ID'), $$ = first($$))) ~> V137S1P1",
				"V137S4P1 derive(RPT_FAMILY_ID = left(RPT_FAMILY_ID, 6),",
				"          DIM_ID = case(DIM_ID == 'oG2','GE2',case(DIM_ID == 'oGE','aGE',case(DIM_ID == 'oSE','SEC',DIM_ID))),",
				"          DIM_LVL_ID = case(DIM_LVL_ID == 'oL2','LV2',case(DIM_LVL_ID == 'oL3','LV3',case(DIM_LVL_ID == 'oL4','LV4',case(DIM_LVL_ID == 'oG2','aG2',case(DIM_LVL_ID == 'oG3','aG3',case(DIM_LVL_ID == 'oG4','aG4',case(DIM_LVL_ID == 'oSE','SEC',DIM_LVL_ID)))))))) ~> V137S0P1Derive",
				"V137S0P1Derive select(mapColumn(",
				"          CNUM,",
				"          EMP_EMAIL_ADDR_TXT,",
				"          EMP_NAME,",
				"          RPT_FAMILY_ID,",
				"          DIM_ID,",
				"          DIM_SRC_ID,",
				"          DIM_LVL_ID,",
				"          DIM_LVL_VAL_ID,",
				"          AUTHORIZED_BY_ID,",
				"          AUTHORIZED_TS,",
				"          LAST_UPDT_TS,",
				"          RPT_FAM_REQ_ID,",
				"          REQ_AD_HOC,",
				"          REQ_AD_HOC_MVSID,",
				"          REQ_AD_HOC_APPR_TS,",
				"          ASSOC_WITH_DIM_ID,",
				"          ASSOC_WITH_VAL_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V137S0P1",
				"V137S3P1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['DELETE FROM #IPPF_RULES.SCHEME#.SEAT_USER_LOAD'],",
				"     postSQLs:['UPDATE STAG.SEAT_USER_LOAD SET DIM_LVL_VAL_ID = \\'UNAS\\' WHERE DIM_LVL_ID = \\'SEC\\' AND DIM_LVL_VAL_ID = \\'BLANK\\'','UPDATE STAG.SEAT_USER_LOAD   SET DIM_LVL_VAL_ID = CASE DIM_LVL_VAL_ID        WHEN \\'DE\\'   THEN \\'SDE\\'        WHEN \\'PMA\\'  THEN \\'SAS\\' --       ELSE DIM_LVL_VAL_ID        END WHERE DIM_ID = \\'RO2\\'   AND DIM_LVL_VAL_ID IN (\\'DE\\', \\'PMA\\')','UPDATE STAG.SEAT_USER_LOAD SET DIM_LVL_VAL_ID = \\'CLOUD\\'  WHERE DIM_LVL_ID = \\'BR2\\' AND DIM_LVL_VAL_ID=\\'CS\\'','UPDATE STAG.SEAT_USER_LOAD SET DIM_LVL_VAL_ID = \\'GBS-GTS\\'  WHERE DIM_LVL_VAL_ID = \\'GBS-OUT\\' AND RPT_FAMILY_ID=\\'IPPF\\'','UPDATE STAG.SEAT_USER_LOAD SET DIM_LVL_VAL_ID = \\'NON SVCS\\'  WHERE DIM_LVL_ID = \\'BR2\\' AND DIM_LVL_VAL_ID=\\'NON SERVICES\\'','DELETE FROM STAG.SEAT_USER_LOAD WHERE RPT_FAMILY_ID=\\'IPPFDL_O\\' AND CNUM IN ( SELECT  DISTINCT     CNUM  FROM STAG.SEAT_USER_LOAD WHERE RPT_FAMILY_ID IN (\\'IPPFDL_O\\')  AND DIM_LVL_VAL_ID =\\'DL\\')','DELETE FROM STAG.SEAT_USER_LOAD WHERE RPT_FAMILY_ID=\\'IPPFLE_O\\' AND CNUM IN ( SELECT  DISTINCT     CNUM  FROM STAG.SEAT_USER_LOAD WHERE RPT_FAMILY_ID IN (\\'IPPFLE_O\\')  AND DIM_LVL_VAL_ID =\\'QP\\')','DELETE FROM STAG.SEAT_USER_LOAD WHERE (CNUM,RPT_FAMILY_ID,DIM_ID) IN ( SELECT DISTINCT CNUM,RPT_FAMILY_ID,DIM_ID FROM STAG.SEAT_USER_LOAD WHERE DIM_LVL_VAL_ID IN (\\'AAA\\',\\'ALL-L1\\',\\'ALL\\')) AND  DIM_LVL_VAL_ID NOT IN (\\'AAA\\',\\'ALL-L1\\',\\'ALL\\')'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> V137S3"
			]
		}
	}
}