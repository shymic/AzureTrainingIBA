{
	"name": "df_filter",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "sourceTable"
				},
				{
					"dataset": {
						"referenceName": "ds_refTable",
						"type": "DatasetReference"
					},
					"name": "refTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sinkTable",
						"type": "DatasetReference"
					},
					"name": "SinkTable"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Filter"
				},
				{
					"name": "RemoveDuplicates"
				},
				{
					"name": "Transformer"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          WBS_ID as string,",
				"          cost_elem_cd as string,",
				"          WBS_ELEM_OC_AMT as integer,",
				"          WBS_ELEM_CC_AMT as integer,",
				"          OBJ_CRNCY_CD as string,",
				"          CNTRL_CRNCY_CD as string,",
				"          MONTH_NUM as short,",
				"          YEAR_NUM as short,",
				"          TXN_CRNCY_CD as string,",
				"          WBS_LVL_NUM as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> sourceTable",
				"source(output(",
				"          COST_ELEM_CD as string,",
				"          VAL_CAT_CD as string,",
				"          REV_IND as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT * FROM COST_ELEMENT',",
				"     format: 'query') ~> refTable",
				"sourceTable, refTable join(sourceTable@cost_elem_cd == refTable@COST_ELEM_CD,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Join1",
				"Transformer split(FRCST_FINL_YR==2022,",
				"     disjoint: false) ~> Filter@(FilterOuput, Rejected)",
				"Filter@Rejected aggregate(groupBy(WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD),",
				"     each(match(name!='WBS_ID'&&name!='VAL_CAT_CD'&&name!='COST_ELEM_CD'), $$ = first($$))) ~> RemoveDuplicates",
				"Join1 select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD = sourceTable@COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          FRCST_FINL_MO = MONTH_NUM,",
				"          FRCST_FINL_YR = YEAR_NUM,",
				"          OBJ_AMT = WBS_ELEM_OC_AMT,",
				"          OBJ_CRNCY_CD,",
				"          CONTRL_AMT = WBS_ELEM_CC_AMT,",
				"          CONTRL_CRNCY_CD = CNTRL_CRNCY_CD,",
				"          TXN_AMT = WBS_ELEM_CC_AMT,",
				"          TXN_CRNCY_CD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Transformer",
				"Filter@FilterOuput, RemoveDuplicates union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['DELETE FROM FORECAST_LOAD'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkTable"
			]
		}
	}
}