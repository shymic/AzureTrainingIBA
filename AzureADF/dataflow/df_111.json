{
	"name": "df_111",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S2P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S4P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S6P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S19P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S16P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S18P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S16P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V18S20P2"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V0S144P1"
				},
				{
					"dataset": {
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference"
					},
					"name": "V0S153P2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sinkTable",
						"type": "DatasetReference"
					},
					"name": "V18S0",
					"description": "THIRDSERV_STAG_WBS_ACTUAL_LOAD_BH_GEO_I"
				},
				{
					"dataset": {
						"referenceName": "ds_sinkTable",
						"type": "DatasetReference"
					},
					"name": "V0S162",
					"description": "THIRDSERV_STAG_WBS_ACTUAL_LOAD_BH_GEO_D"
				}
			],
			"transformations": [
				{
					"name": "V0S164P1Derive",
					"description": "DSLink163"
				},
				{
					"name": "V0S164P1",
					"description": "DSLink163"
				},
				{
					"name": "V0S144P2Join",
					"description": "Join_158"
				},
				{
					"name": "V0S144P2",
					"description": "DSLink160"
				},
				{
					"name": "V18S2P1Join",
					"description": "FILL_VAL_CAT_CD_BRAND"
				},
				{
					"name": "V18S2P1",
					"description": "DSLink156"
				},
				{
					"name": "V18S4P1Join",
					"description": "FILL_BRAND_SHORT_NM"
				},
				{
					"name": "V18S4P1",
					"description": "DSLink150"
				},
				{
					"name": "V18S12P1Derive",
					"description": "DSLink59"
				},
				{
					"name": "V18S12P1",
					"description": "DSLink59"
				},
				{
					"name": "V18S20P1",
					"description": "Funnel_112"
				},
				{
					"name": "V18S12P2Derive",
					"description": "DSLink116"
				},
				{
					"name": "V18S12P2",
					"description": "DSLink116"
				},
				{
					"name": "V18S13P1Join",
					"description": "Join_125"
				},
				{
					"name": "V18S13P1",
					"description": "DSLink113"
				},
				{
					"name": "V18S17P1Join",
					"description": "Join_130"
				},
				{
					"name": "V18S17P1",
					"description": "DSLink134"
				},
				{
					"name": "V18S14P1Derive",
					"description": "DSLink136"
				},
				{
					"name": "V18S14P1",
					"description": "DSLink136"
				},
				{
					"name": "V18S14P2Derive",
					"description": "DSLink142"
				},
				{
					"name": "V18S14P2",
					"description": "DSLink142"
				},
				{
					"name": "V18S9P1Derive",
					"description": "DSLink142"
				},
				{
					"name": "V18S9P1",
					"description": "DSLink142"
				},
				{
					"name": "V18S21P1Join",
					"description": "Join_121"
				},
				{
					"name": "V18S21P1",
					"description": "DSLink64"
				},
				{
					"name": "V18S6P1Derive",
					"description": "DSLink55"
				},
				{
					"name": "V18S6P1",
					"description": "DSLink55"
				},
				{
					"name": "V18S1P3Join",
					"description": "Join_144"
				},
				{
					"name": "V18S1P3",
					"description": "DSLink145"
				},
				{
					"name": "V0S153P1Derive",
					"description": "DSLink149"
				},
				{
					"name": "V0S153P1",
					"description": "DSLink149"
				},
				{
					"name": "V0S156P1Join",
					"description": "Change_Capture_153"
				},
				{
					"name": "V0S156P1Derive",
					"description": "DSLink155"
				},
				{
					"name": "V0S156P1",
					"description": "DSLink155"
				},
				{
					"name": "V18S0P2Constraint",
					"description": "Transformer_156"
				},
				{
					"name": "V18S0P2Derive",
					"description": "insert"
				},
				{
					"name": "V18S0P2",
					"description": "insert"
				},
				{
					"name": "V0S162P1Constraint",
					"description": "Transformer_156"
				},
				{
					"name": "V0S162P1Derive",
					"description": "delete"
				},
				{
					"name": "V0S162P1",
					"description": "delete"
				},
				{
					"name": "V0S146P3",
					"description": "Remove_Duplicates_164"
				},
				{
					"name": "V0S162AlterRow"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BRAND_SHORT_NM as string,",
				"          COST_ELEM_CD as string,",
				"          VAL_CAT_CD_DEFAULT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S2P2",
				"source(output(",
				"          BRAND_SHORT_NM as string,",
				"          COST_ELEM_CD as string,",
				"          VAL_CAT_CD_BRAND as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S4P2",
				"source(output(",
				"          WBS_ID as string,",
				"          BRAND_SHORT_NM as string,",
				"          SAP_CMPNY_CD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S6P2",
				"source(output(",
				"          WBS_ID as string,",
				"          COST_ELEM_CD as string,",
				"          VAL_CAT_CD as string,",
				"          WBS_ELEM_OC_AMT as decimal(15,2),",
				"          MONTH_NUM as integer,",
				"          YEAR_NUM as integer,",
				"          WBS_ELEM_CC_AMT as decimal(15,2),",
				"          OBJ_CRNCY_CD as string,",
				"          CNTL_CRNCY_CD as string,",
				"          TXN_CRNCY_CD as string,",
				"          PLANNED_YEAR as integer,",
				"          PLANNED_MONTH as integer,",
				"          WBS_ELEM_TC_AMT as decimal(15,2),",
				"          WBS_LVL_NUM as integer,",
				"          INFL_FLAG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S19P1",
				"source(output(",
				"          WBS_L2 as string,",
				"          HUB_IND as string,",
				"          CRNCY_CD as string,",
				"          wbs_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S16P1",
				"source(output(",
				"          WBS_ID as string,",
				"          COST_ELEM_CD as string,",
				"          VAL_CAT_CD as string,",
				"          WBS_ELEM_OC_AMT as decimal(15,2),",
				"          MONTH_NUM as integer,",
				"          YEAR_NUM as integer,",
				"          WBS_ELEM_CC_AMT as decimal(15,2),",
				"          OBJ_CRNCY_CD as string,",
				"          CNTL_CRNCY_CD as string,",
				"          TXN_CRNCY_CD as string,",
				"          PLANNED_YEAR as integer,",
				"          PLANNED_MONTH as integer,",
				"          WBS_ELEM_TC_AMT as decimal(15,2),",
				"          WBS_LVL_NUM as integer,",
				"          INFL_FLAG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S18P1",
				"source(output(",
				"          WBS_L2 as string,",
				"          CRNCY_CD_L2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S16P2",
				"source(output(",
				"          CRNCY_CD as string,",
				"          PLANNED_YEAR as integer,",
				"          PLAN_EXCHG_RATE as decimal(15,7),",
				"          PLANNED_MONTH as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V18S20P2",
				"source(output(",
				"          COST_ELEM_CD as string,",
				"          VAL_CAT_CD_IPPF as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V0S144P1",
				"source(output(",
				"          HASH_CD as string,",
				"          OBJ_AMT as decimal(20,2)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 200) ~> V0S153P2",
				"V18S1P3 derive(VAL_CAT_CD = case(!isNull(VAL_CAT_CD_BRAND)  && trim(VAL_CAT_CD_BRAND)  != '',VAL_CAT_CD_BRAND,case(!isNull(VAL_CAT_CD_DEFAULT)  && trim(VAL_CAT_CD_DEFAULT)  != '',VAL_CAT_CD_DEFAULT,case(!isNull(VAL_CAT_CD_IPPF)  && trim(VAL_CAT_CD_IPPF)  != '',VAL_CAT_CD_IPPF,'-1'))),",
				"          ACTL_FINL_MO = case(ACTL_FINL_MO > 12,12,ACTL_FINL_MO),",
				"          VAL_CAT_CD_SOURCE = VAL_CAT_CD) ~> V0S164P1Derive",
				"V0S164P1Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          SAP_CMPNY_CD,",
				"          VAL_CAT_CD_BRAND,",
				"          VAL_CAT_CD_DEFAULT,",
				"          VAL_CAT_CD_IPPF,",
				"          VAL_CAT_CD_SOURCE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V0S164P1",
				"V18S2P1, V18S2P2 join(V18S2P1@COST_ELEM_CD == V18S2P2@COST_ELEM_CD,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V0S144P2Join",
				"V0S144P2Join select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD = V18S2P1@COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          BRAND_SHORT_NM,",
				"          SAP_CMPNY_CD,",
				"          VAL_CAT_CD_BRAND,",
				"          VAL_CAT_CD_DEFAULT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V0S144P2",
				"V18S4P2, V18S4P1 join(V18S4P2@BRAND_SHORT_NM == V18S4P1@BRAND_SHORT_NM,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V18S2P1Join",
				"V18S2P1Join select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD = V18S4P2@COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          BRAND_SHORT_NM = V18S4P1@BRAND_SHORT_NM,",
				"          SAP_CMPNY_CD,",
				"          VAL_CAT_CD_BRAND",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S2P1",
				"V18S6P1, V18S6P2 join(V18S6P1@WBS_ID == V18S6P2@WBS_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V18S4P1Join",
				"V18S4P1Join select(mapColumn(",
				"          WBS_ID = V18S6P1@WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          BRAND_SHORT_NM,",
				"          SAP_CMPNY_CD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S4P1",
				"V18S9P1 derive(WBS_L2 = substring(WBS_ID, 1, 11),",
				"          CRNCY_CD = OBJ_CRNCY_CD,",
				"          AMT = WBS_ELEM_OC_AMT) ~> V18S12P1Derive",
				"V18S12P1Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          WBS_ELEM_OC_AMT,",
				"          MONTH_NUM,",
				"          YEAR_NUM,",
				"          WBS_ELEM_CC_AMT,",
				"          OBJ_CRNCY_CD,",
				"          CNTL_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          PLANNED_YEAR,",
				"          PLANNED_MONTH,",
				"          WBS_ELEM_TC_AMT,",
				"          WBS_LVL_NUM,",
				"          WBS_L2,",
				"          CRNCY_CD,",
				"          AMT,",
				"          INFL_FLAG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S12P1",
				"V18S12P1, V18S12P2 union(byName: true)~> V18S20P1",
				"V18S13P1 derive(CRNCY_CD = case(HUB_IND == 'Y',CRNCY_CD,OBJ_CRNCY_CD),",
				"          AMT = case(HUB_IND == 'Y',WBS_ELEM_TC_AMT,WBS_ELEM_OC_AMT)) ~> V18S12P2Derive",
				"V18S12P2Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          WBS_ELEM_OC_AMT,",
				"          MONTH_NUM,",
				"          YEAR_NUM,",
				"          WBS_ELEM_CC_AMT,",
				"          OBJ_CRNCY_CD,",
				"          CNTL_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          PLANNED_YEAR,",
				"          PLANNED_MONTH,",
				"          WBS_ELEM_TC_AMT,",
				"          WBS_LVL_NUM,",
				"          WBS_L2,",
				"          CRNCY_CD,",
				"          AMT,",
				"          INFL_FLAG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S12P2",
				"V18S14P1, V18S14P2 join(V18S14P1@wbs_id == V18S14P2@WBS_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V18S13P1Join",
				"V18S13P1Join select(mapColumn(",
				"          WBS_ID = wbs_id,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          WBS_ELEM_OC_AMT,",
				"          MONTH_NUM,",
				"          YEAR_NUM,",
				"          WBS_ELEM_CC_AMT,",
				"          OBJ_CRNCY_CD,",
				"          CNTL_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          PLANNED_YEAR,",
				"          PLANNED_MONTH,",
				"          WBS_ELEM_TC_AMT,",
				"          WBS_LVL_NUM,",
				"          WBS_L2,",
				"          HUB_IND,",
				"          CRNCY_CD,",
				"          INFL_FLAG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S13P1",
				"V18S16P1, V18S16P2 join(V18S16P1@WBS_L2 == V18S16P2@WBS_L2,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V18S17P1Join",
				"V18S17P1Join select(mapColumn(",
				"          wbs_id,",
				"          WBS_L2 = V18S16P1@WBS_L2,",
				"          CRNCY_CD,",
				"          HUB_IND,",
				"          CRNCY_CD_L2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S17P1",
				"V18S17P1 derive(CRNCY_CD = case(HUB_IND == 'Y',CRNCY_CD_L2,CRNCY_CD)) ~> V18S14P1Derive",
				"V18S14P1Derive select(mapColumn(",
				"          wbs_id,",
				"          WBS_L2,",
				"          CRNCY_CD,",
				"          HUB_IND",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S14P1",
				"V18S18P1 derive(WBS_ID = case(WBS_LVL_NUM == 1,concat(substring(WBS_ID, 1, 1) , concat('.', (substring(WBS_ID, 2, 5) )) ) ,case(WBS_LVL_NUM == 2,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', (substring(WBS_ID, 7, 3) )) ) ) ) ,case(WBS_LVL_NUM == 3,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', concat((substring(WBS_ID, 7, 3) ), concat('.', (substring(WBS_ID, 10, 3) )) ) ) ) ) ) ,case(WBS_LVL_NUM == 4,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', concat((substring(WBS_ID, 7, 3) ), concat('.', concat((substring(WBS_ID, 10, 3) ), concat('.', (substring(WBS_ID, 13, 3) )) ) ) ) ) ) ) ) ,case(WBS_LVL_NUM == 5,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', concat((substring(WBS_ID, 7, 3) ), concat('.', concat((substring(WBS_ID, 10, 3) ), concat('.', concat((substring(WBS_ID, 13, 3) ), concat('.', (substring(WBS_ID, 16, 3) )) ) ) ) ) ) ) ) ) ) ,WBS_ID)))))) ~> V18S14P2Derive",
				"V18S14P2Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          WBS_ELEM_OC_AMT,",
				"          MONTH_NUM,",
				"          YEAR_NUM,",
				"          WBS_ELEM_CC_AMT,",
				"          OBJ_CRNCY_CD,",
				"          CNTL_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          PLANNED_YEAR,",
				"          PLANNED_MONTH,",
				"          WBS_ELEM_TC_AMT,",
				"          WBS_LVL_NUM,",
				"          INFL_FLAG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S14P2",
				"V18S19P1 derive(WBS_ID = case(WBS_LVL_NUM == 1,concat(substring(WBS_ID, 1, 1) , concat('.', (substring(WBS_ID, 2, 5) )) ) ,case(WBS_LVL_NUM == 2,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', (substring(WBS_ID, 7, 3) )) ) ) ) ,case(WBS_LVL_NUM == 3,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', concat((substring(WBS_ID, 7, 3) ), concat('.', (substring(WBS_ID, 10, 3) )) ) ) ) ) ) ,case(WBS_LVL_NUM == 4,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', concat((substring(WBS_ID, 7, 3) ), concat('.', concat((substring(WBS_ID, 10, 3) ), concat('.', (substring(WBS_ID, 13, 3) )) ) ) ) ) ) ) ) ,case(WBS_LVL_NUM == 5,concat(substring(WBS_ID, 1, 1) , concat('.', concat((substring(WBS_ID, 2, 5) ), concat('.', concat((substring(WBS_ID, 7, 3) ), concat('.', concat((substring(WBS_ID, 10, 3) ), concat('.', concat((substring(WBS_ID, 13, 3) ), concat('.', (substring(WBS_ID, 16, 3) )) ) ) ) ) ) ) ) ) ) ,WBS_ID)))))) ~> V18S9P1Derive",
				"V18S9P1Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          WBS_ELEM_OC_AMT,",
				"          MONTH_NUM,",
				"          YEAR_NUM,",
				"          WBS_ELEM_CC_AMT,",
				"          OBJ_CRNCY_CD,",
				"          CNTL_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          PLANNED_YEAR,",
				"          PLANNED_MONTH,",
				"          WBS_ELEM_TC_AMT,",
				"          WBS_LVL_NUM,",
				"          INFL_FLAG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S9P1",
				"V18S20P2, V18S20P1 join(V18S20P2@CRNCY_CD == V18S20P1@CRNCY_CD,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V18S21P1Join",
				"V18S21P1Join select(mapColumn(",
				"          PLAN_EXCHG_RATE,",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          WBS_ELEM_OC_AMT,",
				"          MONTH_NUM,",
				"          YEAR_NUM,",
				"          WBS_ELEM_CC_AMT,",
				"          OBJ_CRNCY_CD,",
				"          CNTL_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          PLANNED_YEAR,",
				"          PLANNED_MONTH,",
				"          WBS_ELEM_TC_AMT,",
				"          WBS_LVL_NUM,",
				"          WBS_L2,",
				"          AMT,",
				"          CRNCY_CD = V18S20P1@CRNCY_CD,",
				"          INFL_FLAG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S21P1",
				"V18S21P1 derive(OBJ_AMT = case(OBJ_CRNCY_CD == 'KWD',AMT/10.0,AMT),",
				"          CONTRL_CRNCY_CD = 'USD',",
				"          PLAN_CRNCY_CD = 'PLN',",
				"          PLAN_AMT = case(INFL_FLAG == 'Y',WBS_ELEM_CC_AMT,case(PLAN_EXCHG_RATE == 0,PLAN_EXCHG_RATE,case(OBJ_CRNCY_CD == 'KWD',AMT/10.0/PLAN_EXCHG_RATE,AMT/PLAN_EXCHG_RATE)))) ~> V18S6P1Derive",
				"V18S6P1Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO = MONTH_NUM,",
				"          ACTL_FINL_YR = YEAR_NUM,",
				"          OBJ_CRNCY_CD = CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT = WBS_ELEM_CC_AMT,",
				"          TXN_AMT = WBS_ELEM_TC_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2 = WBS_L2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S6P1",
				"V0S144P1, V0S144P2 join(V0S144P1@COST_ELEM_CD == V0S144P2@COST_ELEM_CD,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V18S1P3Join",
				"V18S1P3Join select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD = V0S144P2@COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          BRAND_SHORT_NM,",
				"          SAP_CMPNY_CD,",
				"          VAL_CAT_CD_BRAND,",
				"          VAL_CAT_CD_DEFAULT,",
				"          VAL_CAT_CD_IPPF",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S1P3",
				"V0S146P3 derive(HASH_CD = md5(columns() )) ~> V0S153P1Derive",
				"V0S153P1Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          SAP_CMPNY_CD,",
				"          VAL_CAT_CD_BRAND,",
				"          VAL_CAT_CD_DEFAULT,",
				"          VAL_CAT_CD_IPPF,",
				"          VAL_CAT_CD_SOURCE,",
				"          HASH_CD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V0S153P1",
				"V0S153P2, V0S153P1 join(V0S153P2@HASH_CD == V0S153P1@HASH_CD,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> V0S156P1Join",
				"V0S156P1Join derive(WBS_ID = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@WBS_ID,V0S153P2@WBS_ID),",
				"          COST_ELEM_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@COST_ELEM_CD,V0S153P2@COST_ELEM_CD),",
				"          VAL_CAT_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@VAL_CAT_CD,V0S153P2@VAL_CAT_CD),",
				"          ACTL_FINL_MO = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@ACTL_FINL_MO,V0S153P2@ACTL_FINL_MO),",
				"          ACTL_FINL_YR = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@ACTL_FINL_YR,V0S153P2@ACTL_FINL_YR),",
				"          OBJ_CRNCY_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@OBJ_CRNCY_CD,V0S153P2@OBJ_CRNCY_CD),",
				"          TXN_CRNCY_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@TXN_CRNCY_CD,V0S153P2@TXN_CRNCY_CD),",
				"          OBJ_AMT = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@OBJ_AMT,V0S153P2@OBJ_AMT),",
				"          CONTRL_AMT = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@CONTRL_AMT,V0S153P2@CONTRL_AMT),",
				"          TXN_AMT = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@TXN_AMT,V0S153P2@TXN_AMT),",
				"          CONTRL_CRNCY_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@CONTRL_CRNCY_CD,V0S153P2@CONTRL_CRNCY_CD),",
				"          PLAN_CRNCY_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@PLAN_CRNCY_CD,V0S153P2@PLAN_CRNCY_CD),",
				"          PLAN_AMT = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@PLAN_AMT,V0S153P2@PLAN_AMT),",
				"          WBS_ID_L2 = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@WBS_ID_L2,V0S153P2@WBS_ID_L2),",
				"          SAP_CMPNY_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@SAP_CMPNY_CD,V0S153P2@SAP_CMPNY_CD),",
				"          VAL_CAT_CD_BRAND = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@VAL_CAT_CD_BRAND,V0S153P2@VAL_CAT_CD_BRAND),",
				"          VAL_CAT_CD_DEFAULT = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@VAL_CAT_CD_DEFAULT,V0S153P2@VAL_CAT_CD_DEFAULT),",
				"          VAL_CAT_CD_IPPF = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@VAL_CAT_CD_IPPF,V0S153P2@VAL_CAT_CD_IPPF),",
				"          VAL_CAT_CD_SOURCE = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@VAL_CAT_CD_SOURCE,V0S153P2@VAL_CAT_CD_SOURCE),",
				"          HASH_CD = case(isNull(V0S153P2@HASH_CD) ,V0S153P1@HASH_CD,V0S153P2@HASH_CD),",
				"          change_code = case(isNull(V0S153P2@HASH_CD) ,2,case(isNull(V0S153P1@HASH_CD) ,1,case(notEquals(V0S153P2@OBJ_AMT, V0S153P1@OBJ_AMT) ,3,0)))) ~> V0S156P1Derive",
				"V0S156P1Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          SAP_CMPNY_CD,",
				"          VAL_CAT_CD_BRAND,",
				"          VAL_CAT_CD_DEFAULT,",
				"          VAL_CAT_CD_IPPF,",
				"          VAL_CAT_CD_SOURCE,",
				"          HASH_CD,",
				"          change_code",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V0S156P1",
				"V0S156P1 filter(change_code == 1) ~> V18S0P2Constraint",
				"V18S0P2Constraint derive(LST_CHG_TMS = currenttimestamp(),",
				"          ROW_STAT = 'I',",
				"          PROC_IND = 'N') ~> V18S0P2Derive",
				"V18S0P2Derive select(mapColumn(",
				"          WBS_ID,",
				"          COST_ELEM_CD,",
				"          VAL_CAT_CD,",
				"          ACTL_FINL_MO,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          TXN_CRNCY_CD,",
				"          OBJ_AMT,",
				"          CONTRL_AMT,",
				"          TXN_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          PLAN_CRNCY_CD,",
				"          PLAN_AMT,",
				"          WBS_ID_L2,",
				"          SAP_CMPNY_CD,",
				"          VAL_CAT_CD_BRAND,",
				"          VAL_CAT_CD_DEFAULT,",
				"          VAL_CAT_CD_IPPF,",
				"          VAL_CAT_CD_SOURCE,",
				"          HASH_CD,",
				"          LST_CHG_TMS,",
				"          ROW_STAT,",
				"          PROC_IND",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V18S0P2",
				"V0S156P1 filter(change_code == 2) ~> V0S162P1Constraint",
				"V0S162P1Constraint derive(LST_CHG_TMS = currenttimestamp(),",
				"          ROW_STAT = 'D',",
				"          PROC_IND = 'N') ~> V0S162P1Derive",
				"V0S162P1Derive select(mapColumn(",
				"          HASH_CD,",
				"          LST_CHG_TMS,",
				"          ROW_STAT,",
				"          PROC_IND",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> V0S162P1",
				"V0S164P1 aggregate(groupBy(VAL_CAT_CD_DEFAULT,",
				"          SAP_CMPNY_CD,",
				"          PLAN_CRNCY_CD,",
				"          WBS_ID_L2,",
				"          VAL_CAT_CD_BRAND,",
				"          COST_ELEM_CD,",
				"          OBJ_AMT,",
				"          PLAN_AMT,",
				"          WBS_ID,",
				"          VAL_CAT_CD,",
				"          TXN_CRNCY_CD,",
				"          VAL_CAT_CD_IPPF,",
				"          CONTRL_AMT,",
				"          CONTRL_CRNCY_CD,",
				"          ACTL_FINL_YR,",
				"          OBJ_CRNCY_CD,",
				"          VAL_CAT_CD_SOURCE,",
				"          TXN_AMT,",
				"          ACTL_FINL_MO),",
				"     each(match(name!='VAL_CAT_CD_DEFAULT'&&name!='SAP_CMPNY_CD'&&name!='PLAN_CRNCY_CD'&&name!='WBS_ID_L2'&&name!='VAL_CAT_CD_BRAND'&&name!='COST_ELEM_CD'&&name!='OBJ_AMT'&&name!='PLAN_AMT'&&name!='WBS_ID'&&name!='VAL_CAT_CD'&&name!='TXN_CRNCY_CD'&&name!='VAL_CAT_CD_IPPF'&&name!='CONTRL_AMT'&&name!='CONTRL_CRNCY_CD'&&name!='ACTL_FINL_YR'&&name!='OBJ_CRNCY_CD'&&name!='VAL_CAT_CD_SOURCE'&&name!='TXN_AMT'&&name!='ACTL_FINL_MO'), $$ = first($$))) ~> V0S146P3",
				"V0S162P1 alterRow(updateIf(true())) ~> V0S162AlterRow",
				"V18S0P2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> V18S0",
				"V0S162AlterRow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['HASH_CD'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError') ~> V0S162"
			]
		}
	}
}