{
	"name": "pl_041",
	"properties": {
		"activities": [
			{
				"name": "V162S0P2",
				"description": "Copy_2_of_DB2_Connector_96",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT cast(AL1.CTRY_CD as char(4)) as CNTRY\nFROM BMSIW.GEO_RGN_CTRY_UV AL1\nJOIN BMSIW.COUNTRY_REF_UV AL2 \n        ON AL1.CTRY_CD=AL2.COUNTRY_CD\n        AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n        AND AL2.STATUS='O'\nWHERE '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\nOR (AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES} and '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\nfetch first 250 rows only\nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceDB2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V162S0P2.csv",
							"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N"
						}
					}
				]
			},
			{
				"name": "V162S3P2",
				"description": "Copy_5_of_DB2_Connector_96",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V162S0P2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "select v.worknumber as wbs_id,t.SAP_CMPNY_CD1 from bmsiw.t510wrk_uv v join\n(SELECT distinct v.RCVCUSTCTRY as SAP_CMPNY_CD1,v.contractnumber as PROJ_WBS_ID\nFROM BMSIW.t510wrk_uV           V \nJOIN  BMSIW.COUNTRY_REF_UV AL2 \nON v.COUNTRY=AL2.COUNTRY_CD\nJOIN  BMSIW.COUNTRY_REF_UV AL3\nON v.RCVCUSTCTRY=AL3.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL4\nON AL4.CTRY_CD=AL2.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL5\nON AL5.CTRY_CD=AL3.COUNTRY_CD\n   where v.country <> v.RCVCUSTCTRY \n   and v.country='606'\n and v.contractnumber <>''  \n) t on v.contractnumber = t.PROJ_WBS_ID where v.worknumber<>''\nunion\nselect v.account_id as wbs_id,t.SAP_CMPNY_CD1 from BMSIW.ACCOUNT_UV v join\n(SELECT distinct  v.RCVCUSTCTRY as SAP_CMPNY_CD1,v.contractnumber as PROJ_WBS_ID\nFROM BMSIW.t510wrk_uV           V \nJOIN  BMSIW.COUNTRY_REF_UV AL2 \nON v.COUNTRY=AL2.COUNTRY_CD\nJOIN  BMSIW.COUNTRY_REF_UV AL3\nON v.RCVCUSTCTRY=AL3.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL4\nON AL4.CTRY_CD=AL2.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL5\nON AL5.CTRY_CD=AL3.COUNTRY_CD\n   where v.country <> v.RCVCUSTCTRY \n   and v.country='606'\n and v.contractnumber <>''  \n) t on v.ACCTGRP_ID  = t.PROJ_WBS_ID where v.account_id <>'' \nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceDB2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V162S3P2.csv",
							"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N"
						}
					}
				]
			},
			{
				"name": "V162S13P3",
				"description": "EMF_RATE",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V162S3P2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT CNUM_ID, CAST(NULL AS CHAR) AS WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, EMP_LVL_CD AS BAND, WEEKENDINGDATE, CURRENCY_CD, \n       CAST(NULL AS decimal(20, 2)) AS BILL_RATE,  CAST(NULL AS decimal(20, 2)) AS COST_RATE, EMF_RATE, cast(GDC_FLG as char(1)) as GDC_FLG, cast(null as char) as CNTRY\n  FROM ( SELECT row_number() over(partition by g.cnum_id order by date(G.LST_ALTR_TMS) desc) as rn, \n                G.CNUM_ID                      AS CNUM_ID, \n                G.EMP_SER_NUM                               AS SERIALNUMBER,\n                G.CTRY_CD                                   AS EMPLOYEECOUNTRY,\n                CASE\n                   WHEN G.EMP_STAT_CD = 'CT' THEN 'Sub'\n                   ELSE 'IBM'\n                END                                         AS RESOURCE_TYPE,\n                date(G.LST_ALTR_TMS)                        AS WEEKENDINGDATE,\n                G.LOC_CURR_CD                               AS CURRENCY_CD,\n                G.EMP_LVL_CD                                AS EMP_LVL_CD,\n                G.CHRG_AMT                                  AS EMF_RATE,\n                CASE\n                   WHEN MF.EMP_STATUS <> 'CT' AND G.BMS_SOP_HUB_ID IN ('DUB-RMC', 'SING-RMC') THEN 'Y'\n                   ELSE 'N'\n                END AS GDC_FLG    \n           FROM BMSIW.EMF_DATAMART_V G left join\n                BMSIW.EMP_MASTER_FILE_V MF\n                 ON MF.EMP_SER_NUM = G.EMP_SER_NUM\n                AND MF.COUNTRY_CODE = G.CTRY_CD\n                AND MF.COMPANY_CODE = G.CMPNY_CD           \n          WHERE  G.CHRG_AMT<>0.00 AND G.CNUM_ID IS NOT NULL\n               \n      ) res\n where rn=1",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceNetezza",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V162S13P3.csv",
							"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N"
						}
					}
				]
			},
			{
				"name": "V162S8P3",
				"description": "COST_RATE_PACT",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V162S13P3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT CAST (NULL AS CHAR) AS CNUM_ID, WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, CAST(NULL AS CHAR) AS BAND, WEEKENDINGDATE, CURRENCY_CD, BILL_RATE, COST_RATE, EMF_RATE, CAST(NULL AS CHAR) AS GDC_FLG,CNTRY\nFROM (\nSELECT WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, '6' AS BAND, WEEKENDINGDATE, CURRENCY_CD, \n       CAST(NULL AS decimal(20, 2)) AS BILL_RATE, cast(TOT_CHRG_AMT/HRS_CST as decimal(20, 2)) AS COST_RATE, CAST(NULL AS decimal(20, 2)) AS EMF_RATE,CNTRY,\n       row_number() over (partition by WBS_ID, SERIALNUMBER, EMPLOYEECOUNTRY order by WEEKENDINGDATE desc) as rn \nFROM (\n SELECT         CHRG_CUR_Y.ACCOUNT_ID                                AS WBS_ID,\n                CHRG_CUR_Y.ORIG_EMP_NUM                              AS SERIALNUMBER,\n                CHRG_CUR_Y.PRFRMNG_CTRY_CD                           AS EMPLOYEECOUNTRY,\n                CASE\n                    WHEN CHRG_CUR_Y.SERVICE_RESTYP_CD = 'CONTRACT' THEN 'Sub'\n                    ELSE 'IBM'\n                END AS RESOURCE_TYPE,\n                CHRG_CUR_Y.WEEK_ENDING_DATE                          AS WEEKENDINGDATE,  \n                CHRG_CUR_Y.ORIG_CURRENCY_CD                          AS CURRENCY_CD,\n                cast (CHRG_CUR_Y.ORIGINAL_USAGE_QTY as double)       AS HRS_CST,\n                CHRG_CUR_Y.PROJECT_LC_AMT                              AS TOT_CHRG_AMT,\nWBS_ELM_MSR.OWNING_COUNTRY_CD as CNTRY\n                FROM\n                    BMSIW.ACCOUNT_V AS WBS_ELM_MSR,\n                    BMSIW.LABOR_ALL_WWV           AS LBR,\n                    BDWDM.PROJECT_COST_CURR_WWV    AS CHRG_CUR_Y\n                WHERE LBR.ACCOUNT_ID = WBS_ELM_MSR.ACCOUNT_ID\n                AND (LBR.EMP_SER_NUM = CHRG_CUR_Y.ORIG_EMP_NUM\n                    AND LBR.EMP_COMPANY_CODE = CHRG_CUR_Y.PRFRMNG_CMPNY_CD\n                    AND LBR.COUNTRY_CODE = CHRG_CUR_Y.PRFRMNG_CTRY_CD\n                    AND LBR.WEEK_ENDING_DATE = CHRG_CUR_Y.WEEK_ENDING_DATE )\n                AND CHRG_CUR_Y.SERVICE_CLASS_CD = 'LABOR'\n                AND CHRG_CUR_Y.TOT_CHRG_AMT<>0.00\n                AND ( WBS_ELM_MSR.OWNING_COUNTRY_CD  in (SELECT cast(AL1.CTRY_CD as char(4))\nFROM BMSIW.GEO_RGN_CTRY_V AL1\nJOIN BMSIW.COUNTRY_REF_V AL2 \n        ON AL1.CTRY_CD=AL2.COUNTRY_CD\n        AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_MIGR}\n        AND AL2.STATUS='O'  and AL1.CTRY_CD!='606'\nWHERE '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\nOR (AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES} and '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\nlimit 250) or WBS_ELM_MSR.OWNING_COUNTRY_CD='606')\nand WBS_ELM_MSR.CONTROL_GROUP_CD  in ('AP1','AUS1','BRZ1','CAN1','CAN2', 'EMEA','EMEA1', 'NA1', 'NA2')         \nand WBS_ELM_MSR.ACCT_TYP_CD ='C'\nand WBS_ELM_MSR.INSTALLATION_ID = 'PACT'\nand WBS_ELM_MSR.CFT_WORK_NUM =''\nand WBS_ELM_MSR.ACCOUNT_ID NOT IN\n(select wkk.worknumber from bmsiw.t510wrk_v wkk /*fetch first 10000000 rows only*/)     \n\nunion all\n\n SELECT         CHRG_CUR_Y.ACCOUNT_ID                                AS WBS_ID,\n                CHRG_CUR_Y.ORIG_EMP_NUM                              AS SERIALNUMBER,\n                CHRG_CUR_Y.PRFRMNG_CTRY_CD                           AS EMPLOYEECOUNTRY,\n                CASE\n                    WHEN CHRG_CUR_Y.SERVICE_RESTYP_CD = 'CONTRACT' THEN 'Sub'\n                    ELSE 'IBM'\n                END AS RESOURCE_TYPE,\n                CHRG_CUR_Y.WEEK_ENDING_DATE                          AS WEEKENDINGDATE,  \n                CHRG_CUR_Y.ORIG_CURRENCY_CD                          AS CURRENCY_CD,\n                cast (CHRG_CUR_Y.ORIGINAL_USAGE_QTY as double)       AS HRS_CST,\n                CHRG_CUR_Y.PROJECT_LC_AMT                              AS TOT_CHRG_AMT,\nWBS_ELM_MSR.OWNING_COUNTRY_CD as CNTRY\n                FROM\n                    BMSIW.ACCOUNT_V AS WBS_ELM_MSR,\n                    BMSIW.LABOR_ALL_WWV           AS LBR,\n                    BDWDM.PROJECT_COST_PRIOR_WWV    AS CHRG_CUR_Y\n                WHERE LBR.ACCOUNT_ID = WBS_ELM_MSR.ACCOUNT_ID\n                AND (LBR.EMP_SER_NUM = CHRG_CUR_Y.ORIG_EMP_NUM\n                    AND LBR.EMP_COMPANY_CODE = CHRG_CUR_Y.PRFRMNG_CMPNY_CD\n                    AND LBR.COUNTRY_CODE = CHRG_CUR_Y.PRFRMNG_CTRY_CD\n                    AND LBR.WEEK_ENDING_DATE = CHRG_CUR_Y.WEEK_ENDING_DATE )\n                AND CHRG_CUR_Y.SERVICE_CLASS_CD = 'LABOR'\n                AND CHRG_CUR_Y.TOT_CHRG_AMT<>0.00\n                AND ( WBS_ELM_MSR.OWNING_COUNTRY_CD  in (SELECT cast(AL1.CTRY_CD as char(4))\nFROM BMSIW.GEO_RGN_CTRY_V AL1\nJOIN BMSIW.COUNTRY_REF_V AL2 \n        ON AL1.CTRY_CD=AL2.COUNTRY_CD\n        AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_MIGR}\n        AND AL2.STATUS='O'  and AL1.CTRY_CD!='606'\nWHERE '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\nOR (AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES} and '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\nlimit 250) or WBS_ELM_MSR.OWNING_COUNTRY_CD='606')\nand WBS_ELM_MSR.CONTROL_GROUP_CD  in ('AP1','AUS1','BRZ1','CAN1','CAN2', 'EMEA','EMEA1', 'NA1', 'NA2')         \nand WBS_ELM_MSR.ACCT_TYP_CD ='C'\nand WBS_ELM_MSR.INSTALLATION_ID = 'PACT'\nand WBS_ELM_MSR.CFT_WORK_NUM =''\nand WBS_ELM_MSR.ACCOUNT_ID NOT IN\n(select wkk.worknumber from bmsiw.t510wrk_v wkk /*fetch first 10000000 rows only*/)\n )res\n) res_all\nwhere rn=1",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceNetezza",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V162S8P3.csv",
							"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N"
						}
					}
				]
			},
			{
				"name": "V162S13P1",
				"description": "COST_RATE_BH",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V162S8P3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT CAST (NULL AS CHAR) AS CNUM_ID, WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, CAST(NULL AS CHAR) AS BAND, WEEKENDINGDATE, CURRENCY_CD, BILL_RATE, COST_RATE, EMF_RATE, CAST(NULL AS CHAR) AS GDC_FLG, cast(null as char) as CNTRY\nFROM (\nSELECT WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, '6' AS BAND, WEEKENDINGDATE, CURRENCY_CD, \n       CAST(NULL AS decimal(20, 2)) AS BILL_RATE, cast(TOT_CHRG_AMT/HRS_CST as decimal(20, 2)) AS COST_RATE, CAST(NULL AS decimal(20, 2)) AS EMF_RATE,\n       row_number() over (partition by WBS_ID, SERIALNUMBER, EMPLOYEECOUNTRY order by WEEKENDINGDATE desc) as rn \nFROM (\nSELECT\n        cast(W.WBS_ID as char(11)) AS WBS_ID,\n        G.ORIG_EMP_NUM AS SERIALNUMBER,\n        G.PRFRMNG_CTRY_CD AS EMPLOYEECOUNTRY,\n        CASE\n                WHEN G.SERVICE_RESTYP_CD = 'CONTRACT' THEN 'Sub'\n                ELSE 'IBM'\n        END AS RESOURCE_TYPE,\n        G.WEEK_ENDING_DATE AS WEEKENDINGDATE,\n        G.ORIG_CURRENCY_CD AS CURRENCY_CD,\n        --G.PRFRMNG_CMPNY_CD AS EMP_CMPNY_CD,\n        CAST(G.ORIGINAL_USAGE_QTY AS DECIMAL(6,2)) AS HRS_CST,\n        G.PROJECT_LC_AMT AS TOT_CHRG_AMT\nFROM BDWDM.PROJECT_COST_CURR_WWV G\n\nINNER JOIN BLUEPP.WBS_ELEMENT_MASTER_V W\nON G.ACCOUNT_ID = W.WBS_SHORT_ID\n\nINNER JOIN BMSIW.LABOR_ALL_WWV LBR\nON LBR.EMP_SER_NUM = G.ORIG_EMP_NUM\nAND LBR.EMP_COMPANY_CODE = G.PRFRMNG_CMPNY_CD\nAND LBR.COUNTRY_CODE = G.PRFRMNG_CTRY_CD\nAND LBR.WEEK_ENDING_DATE = G.WEEK_ENDING_DATE\n\nINNER JOIN BMSIW.COMPANY_REF_V sc \nON sc.SAP_COMPANY_CD = W.SAP_CMPNY_CD \n\nWHERE SC.COUNTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\nAND G.SERVICE_CLASS_CD = 'LABOR'\nAND G.TOT_CHRG_AMT<>0.00 \n\n\nUNION ALL\n\nSELECT\n        cast(W.WBS_ID as char(11)) AS WBS_ID,\n        G.ORIG_EMP_NUM AS SERIALNUMBER,\n        G.PRFRMNG_CTRY_CD AS EMPLOYEECOUNTRY,\n        CASE\n                WHEN G.SERVICE_RESTYP_CD = 'CONTRACT' THEN 'Sub'\n                ELSE 'IBM'\n        END AS RESOURCE_TYPE,\n        G.WEEK_ENDING_DATE AS WEEKENDINGDATE,\n        G.ORIG_CURRENCY_CD AS CURRENCY_CD,\n        --G.PRFRMNG_CMPNY_CD AS EMP_CMPNY_CD,\n        CAST(G.ORIGINAL_USAGE_QTY AS DECIMAL(6,2)) AS HRS_CST,\n        G.PROJECT_LC_AMT AS TOT_CHRG_AMT\nFROM BDWDM.PROJECT_COST_PRIOR_WWV G\n\nINNER JOIN BLUEPP.WBS_ELEMENT_MASTER_V W\nON G.ACCOUNT_ID = W.WBS_SHORT_ID\n\nINNER JOIN BMSIW.LABOR_ALL_WWV LBR\nON LBR.EMP_SER_NUM = G.ORIG_EMP_NUM\nAND LBR.EMP_COMPANY_CODE = G.PRFRMNG_CMPNY_CD\nAND LBR.COUNTRY_CODE = G.PRFRMNG_CTRY_CD\nAND LBR.WEEK_ENDING_DATE = G.WEEK_ENDING_DATE\n\nINNER JOIN BMSIW.COMPANY_REF_V sc \nON sc.SAP_COMPANY_CD = W.SAP_CMPNY_CD \n\nWHERE SC.COUNTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\nAND G.SERVICE_CLASS_CD = 'LABOR'\nAND G.TOT_CHRG_AMT<>0.00 \n\n )res\n) res_all\nwhere rn=1",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceNetezza",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V162S13P1.csv",
							"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N"
						}
					}
				]
			},
			{
				"name": "V162S8P1",
				"description": "COST_RATE_BMS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V162S13P1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT CAST (NULL AS CHAR) AS CNUM_ID, WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, CAST(NULL AS CHAR) AS BAND, WEEKENDINGDATE, CURRENCY_CD, BILL_RATE, COST_RATE, EMF_RATE, CAST(NULL AS CHAR) AS GDC_FLG,CNTRY\nFROM (\nSELECT WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, '6' AS BAND, WEEKENDINGDATE, CURRENCY_CD, \n       CAST(NULL AS decimal(20, 2)) AS BILL_RATE, cast(TOT_CHRG_AMT/HRS_CST as decimal(20, 2)) AS COST_RATE, CAST(NULL AS decimal(20, 2)) AS EMF_RATE,CNTRY,\n       row_number() over (partition by WBS_ID, SERIALNUMBER, EMPLOYEECOUNTRY order by WEEKENDINGDATE desc) as rn \nFROM (\n SELECT         CHRG_CUR_Y.ACCOUNT_ID                                AS WBS_ID,\n                CHRG_CUR_Y.ORIG_EMP_NUM                              AS SERIALNUMBER,\n                CHRG_CUR_Y.PRFRMNG_CTRY_CD                           AS EMPLOYEECOUNTRY,\n                CASE\n                    WHEN CHRG_CUR_Y.SERVICE_RESTYP_CD = 'CONTRACT' THEN 'Sub'\n                    ELSE 'IBM'\n                END AS RESOURCE_TYPE,\n                CHRG_CUR_Y.WEEK_ENDING_DATE                          AS WEEKENDINGDATE,  \n                CHRG_CUR_Y.ORIG_CURRENCY_CD                          AS CURRENCY_CD,\n                cast (CHRG_CUR_Y.ORIGINAL_USAGE_QTY as double)       AS HRS_CST,\n                CHRG_CUR_Y.PROJECT_LC_AMT                              AS TOT_CHRG_AMT,\n                WBS_ELM_MSR.COUNTRY as CNTRY\n                FROM\n                    BMSIW.T510WRK_V AS WBS_ELM_MSR,\n                    BMSIW.LABOR_ALL_WWV           AS LBR,\n                    BDWDM.PROJECT_COST_CURR_WWV    AS CHRG_CUR_Y\n                WHERE LBR.ACCOUNT_ID = WBS_ELM_MSR.WORKNUMBER\n                AND (LBR.EMP_SER_NUM = CHRG_CUR_Y.ORIG_EMP_NUM\n                    AND LBR.EMP_COMPANY_CODE = CHRG_CUR_Y.PRFRMNG_CMPNY_CD\n                    AND LBR.COUNTRY_CODE = CHRG_CUR_Y.PRFRMNG_CTRY_CD\n                    AND LBR.WEEK_ENDING_DATE = CHRG_CUR_Y.WEEK_ENDING_DATE )\n                AND CHRG_CUR_Y.SERVICE_CLASS_CD = 'LABOR'\n                AND CHRG_CUR_Y.TOT_CHRG_AMT<>0.00\n                AND (WBS_ELM_MSR.COUNTRY  in (SELECT cast(AL1.CTRY_CD as char(4))\nFROM BMSIW.GEO_RGN_CTRY_V AL1\nJOIN BMSIW.COUNTRY_REF_V AL2 \n          ON AL1.CTRY_CD=AL2.COUNTRY_CD\n        AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_MIGR}\n        AND AL2.STATUS='O'  and AL1.CTRY_CD!='606'\nWHERE '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\nOR (AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES} and '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\nlimit 250) or WBS_ELM_MSR.COUNTRY='606')\n\nunion all\n\n SELECT         CHRG_CUR_Y.ACCOUNT_ID                                AS WBS_ID,\n                CHRG_CUR_Y.ORIG_EMP_NUM                              AS SERIALNUMBER,\n                CHRG_CUR_Y.PRFRMNG_CTRY_CD                           AS EMPLOYEECOUNTRY,\n                CASE\n                    WHEN CHRG_CUR_Y.SERVICE_RESTYP_CD = 'CONTRACT' THEN 'Sub'\n                    ELSE 'IBM'\n                END AS RESOURCE_TYPE,\n                CHRG_CUR_Y.WEEK_ENDING_DATE                          AS WEEKENDINGDATE,  \n                CHRG_CUR_Y.ORIG_CURRENCY_CD                          AS CURRENCY_CD,\n                cast (CHRG_CUR_Y.ORIGINAL_USAGE_QTY as double)       AS HRS_CST,\n                CHRG_CUR_Y.PROJECT_LC_AMT                              AS TOT_CHRG_AMT,\n                WBS_ELM_MSR.COUNTRY as CNTRY\n                FROM\n                    BMSIW.T510WRK_V AS WBS_ELM_MSR,\n                    BMSIW.LABOR_ALL_WWV           AS LBR,\n                    BDWDM.PROJECT_COST_PRIOR_WWV    AS CHRG_CUR_Y\n                WHERE LBR.ACCOUNT_ID = WBS_ELM_MSR.WORKNUMBER\n                AND (LBR.EMP_SER_NUM = CHRG_CUR_Y.ORIG_EMP_NUM\n                    AND LBR.EMP_COMPANY_CODE = CHRG_CUR_Y.PRFRMNG_CMPNY_CD\n                    AND LBR.COUNTRY_CODE = CHRG_CUR_Y.PRFRMNG_CTRY_CD\n                    AND LBR.WEEK_ENDING_DATE = CHRG_CUR_Y.WEEK_ENDING_DATE )\n                AND CHRG_CUR_Y.SERVICE_CLASS_CD = 'LABOR'\n                AND CHRG_CUR_Y.TOT_CHRG_AMT<>0.00\n                AND (WBS_ELM_MSR.COUNTRY  in (SELECT cast(AL1.CTRY_CD as char(4))\nFROM BMSIW.GEO_RGN_CTRY_V AL1\nJOIN BMSIW.COUNTRY_REF_V AL2 \n          ON AL1.CTRY_CD=AL2.COUNTRY_CD\n        AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_MIGR}\n        AND AL2.STATUS='O'  and AL1.CTRY_CD!='606'\nWHERE '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\nOR (AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES} and '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\nlimit 250) or WBS_ELM_MSR.COUNTRY='606')\n )res\n) res_all\nwhere rn=1",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceNetezza",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V162S8P1.csv",
							"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N"
						}
					}
				]
			},
			{
				"name": "V162S8P2",
				"description": "BILL_RATE",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V162S8P1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT CAST (NULL AS CHAR) AS CNUM_ID, WBS_ID, EMPLOYEECOUNTRY, SERIALNUMBER, RESOURCE_TYPE, CAST(NULL AS CHAR) AS BAND, WEEKENDINGDATE, CURRENCY_CD, \n               cast (BILL_RATE as decimal(20,2)) as BILL_RATE, CAST(NULL AS decimal(20, 2)) AS COST_RATE, CAST(NULL AS decimal(20, 2)) AS EMF_RATE, CAST(NULL AS CHAR) AS GDC_FLG,CNTRY\n  FROM ( SELECT wrk.CURRENCYID AS CURRENCY_CD, CASE\n                                                  WHEN al1.EMPLOYEETYPE = '2' THEN 'Sub'\n                                                  ELSE 'IBM'\n                                               END AS RESOURCE_TYPE,\n                row_number() over (partition by AL1.WORKNUMBER, AL1.SERIALNUMBER, AL1.EMPLOYEECOUNTRY order by AL1.WEEKENDINGDATE desc) as rn,\n                AL1.WORKNUMBER AS WBS_ID,\n                AL1.EMPLOYEECOUNTRY,\n                AL1.SERIALNUMBER,\n                AL1.WEEKENDINGDATE,\n                CAST(AL1.BILLAMOUNT AS DECIMAL(20,2))/(DAILYHOURSSUN+DAILYHOURSMON+DAILYHOURSTUE+DAILYHOURSWED+DAILYHOURSTHU+DAILYHOURSFRI+DAILYHOURSSAT) AS BILL_RATE,\n                WRK.COUNTRY as CNTRY\n           FROM BMSIW.T510LBR_V AL1 JOIN \n                BMSIW.T510WRK_V WRK ON AL1.WORKNUMBER = WRK.WORKNUMBER\n          WHERE AL1.BILLINGRATE<>0.00  AND \n                (WRK.COUNTRY  in (SELECT cast(AL1.CTRY_CD as char(4))\nFROM BMSIW.GEO_RGN_CTRY_V AL1\nJOIN BMSIW.COUNTRY_REF_V AL2 \n        ON AL1.CTRY_CD=AL2.COUNTRY_CD\n        AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\n        AND AL1.CTRY_CD not @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_MIGR}\n        AND AL2.STATUS='O' and AL1.CTRY_CD!='606'\nWHERE '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\nOR (AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES} and '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||'@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\nlimit 250) or WRK.COUNTRY='606') \nand (DAILYHOURSSUN+DAILYHOURSMON+DAILYHOURSTUE+DAILYHOURSWED+DAILYHOURSTHU+DAILYHOURSFRI+DAILYHOURSSAT)<>0\n       ) res\n WHERE rn=1",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceNetezza",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V162S8P2.csv",
							"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N"
						}
					}
				]
			},
			{
				"name": "Transformation",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "V162S8P2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_041",
						"type": "DataFlowReference",
						"parameters": {
							"p_IPPF_RULES_SCHEME": {
								"value": "'@{pipeline().parameters.p_IPPF_RULES_SCHEME}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"V162S0P2": {
								"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N",
								"p_fileName": "V162S0P2.csv"
							},
							"V162S3P2": {
								"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N",
								"p_fileName": "V162S3P2.csv"
							},
							"V162S13P3": {
								"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N",
								"p_fileName": "V162S13P3.csv"
							},
							"V162S8P3": {
								"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N",
								"p_fileName": "V162S8P3.csv"
							},
							"V162S13P1": {
								"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N",
								"p_fileName": "V162S13P1.csv"
							},
							"V162S8P1": {
								"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N",
								"p_fileName": "V162S8P1.csv"
							},
							"V162S8P2": {
								"p_folder": "LIPPFD0041_WBS_RESOURCE_DATA_LOAD_INIT_INTGRT_N",
								"p_fileName": "V162S8P2.csv"
							},
							"V162S7": {
								"p_schema": {
									"value": "@{pipeline().parameters.p_IPPF_RULES_SCHEME}",
									"type": "Expression"
								},
								"p_table": "WBS_RESOURCE_DATA_LOAD"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "ir-azure-DataFlow",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "None"
				}
			}
		],
		"parameters": {
			"p_IPPF_RULES_COUNTRIES": {
				"type": "String"
			},
			"p_IPPF_RULES_COUNTRIES_BH": {
				"type": "String"
			},
			"p_IPPF_RULES_COUNTRIES_MIGR": {
				"type": "String"
			},
			"p_IPPF_RULES_GEO_NAME": {
				"type": "String"
			},
			"p_IPPF_RULES_INST": {
				"type": "String"
			},
			"p_IPPF_RULES_RGN_LVL1_CD": {
				"type": "String"
			},
			"p_IPPF_RULES_SCHEME": {
				"type": "String"
			}
		},
		"annotations": []
	}
}