{
	"name": "pl_LIPPFD0005_demo",
	"properties": {
		"activities": [
			{
				"name": "V161S0P2",
				"description": "Copy_2_of_DB2_Connector_96",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT\n    CAST(AL1.CTRY_CD AS CHAR(4)) AS SAP_CMPNY_CD\nFROM\n    BMSIW.GEO_RGN_CTRY_UV AL1\nJOIN\n    BMSIW.COUNTRY_REF_UV AL2\nON\n    AL1.CTRY_CD=AL2.COUNTRY_CD\nAND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\nAND AL2.STATUS='O'\nWHERE\n    '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||\n    '@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\nOR  (\n        AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES}\n    AND '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||\n        '@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\nFETCH\n    FIRST 250 ROWS ONLY WITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "ds_sourceIPPF_RULES_BMSIWSERV",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V161S0P2.csv",
							"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT"
						}
					}
				]
			},
			{
				"name": "V161S5P1",
				"description": "Copy_2_of_DB2_Connector_95",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V161S0P2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT DISTINCT\n    1                                                AS PROJ_WBS_NUM,\n    CAST(CON.DESCRIPTION AS CHAR(240)) AS PROJ_DESC,\n    CON.CONTRCREATEDATE                              AS PROJ_PLANNED_STRT_DT,\n    CON.CONTRBEGINDATE                               AS PROJ_PLANNED_END_DT,\n    ''                                               AS PRFT_CNTR_CD,\n    ''                                               AS COST_CNTR_CD,\n    0                                                AS APPLCNT_NUM,\n    ''                                               AS APPLCNT_NM,\n    ''                                               AS FUNCTL_AREA_CD,\n    ''                                               AS CNTL_AREA_CD,\n    ''                                               AS PROJ_PROF_CD,\n    ''                                               AS PROJ_CRNCY_CD,\n    ''                                               AS PROJ_TYP_CD,\n    CON.COUNTRY                                      AS SAP_CMPNY_CD,\n    CON.COUNTRY                                      AS BH_SAP_CMPNY_CD,\n    CON.CONTRACTNUMBER                               AS PROJ_WBS_ID,\n    'BMS'                                            AS APPL_IND\nFROM\n    BMSIW.T510BUS_UV BUS,\n    BMSIW.T510WRK_UV WRK,\n    BMSIW.T510CON_UV CON\nJOIN\n    BMSIW.COMPANY_REF_UV SC\nON\n    SC.COUNTRY_CD = WRK.COUNTRY\nAND SC.COMPANY_CD = WRK.COMPANYCODE @{pipeline().parameters.p_IPPF_RULES_COMPANY_COND}\nWHERE\n    BUS.COUNTRY = WRK.COUNTRY\n/*AND BUS.COMPANYCODE = WRK.COMPANYCODE\nAND BUS.BUSINESSTYPE = WRK.BUSINESSTYPE\nAND WRK.COUNTRY = CON.COUNTRY\nAND WRK.COMPANYCODE = CON.COMPANYCODE\nAND WRK.CONTRACTNUMBER = CON.CONTRACTNUMBER\nAND (\n        SUBSTR(CHAR(CON.CONTRENDDATE),1,7) >= SUBSTR(CHAR(CURRENT DATE - 3 YEARS),1,7) --CHANGED BY\n        -- E.S. TASK 560.1\n    OR  CON.CONTRACTSTATUS IN ( 'A',\n                               'P' ) )\nAND CON.CONTRACTNUMBER<>''@{pipeline().parameters.p_IPPF_RULES_CONTR_STATUS}\nAND ( (\n            CON.COUNTRY IN\n            (\n                SELECT\n                    CAST(AL1.CTRY_CD AS CHAR(4))\n                FROM\n                    BMSIW.GEO_RGN_CTRY_UV AL1\n                JOIN\n                    BMSIW.COUNTRY_REF_UV AL2\n                ON\n                    AL1.CTRY_CD=AL2.COUNTRY_CD\n                AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n                AND AL1.CTRY_CD NOT @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\n                AND AL1.CTRY_CD NOT @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_MIGR}\n                AND AL2.STATUS='O'\n                AND AL1.CTRY_CD!='606'\n                WHERE\n                    '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||\n                    '@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\n                OR  (\n                        AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES}\n                    AND '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||\n                        '@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\n                FETCH\n                    FIRST 250 ROWS ONLY) @{pipeline().parameters.p_IPPF_RULES_GEO} )\n    OR  (\n            CON.COUNTRY='606'))\n    --AND    BU.BUSMEASUREDIV   IN @{pipeline().parameters.p_IPPF_RULES_DIVISIONS}*/\nfetch first 10000 rows only\nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "ds_sourceIPPF_RULES_BMSIWSERV",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V161S5P1.csv",
							"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT"
						}
					}
				]
			},
			{
				"name": "V161S5P2",
				"description": "Copy_5_of_DB2_Connector_96",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V161S5P1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT DISTINCT\n    V.RCVCUSTCTRY    AS SAP_CMPNY_CD1,\n    V.CONTRACTNUMBER AS PROJ_WBS_ID\nFROM\n    BMSIW.T510WRK_UV V\nJOIN\n    BMSIW.COUNTRY_REF_UV AL2\nON\n    V.COUNTRY=AL2.COUNTRY_CD\nJOIN\n    BMSIW.COUNTRY_REF_UV AL3\nON\n    V.RCVCUSTCTRY=AL3.COUNTRY_CD\nJOIN\n    BMSIW.GEO_RGN_CTRY_UV AL4\nON\n    AL4.CTRY_CD=AL2.COUNTRY_CD\nJOIN\n    BMSIW.GEO_RGN_CTRY_UV AL5\nON\n    AL5.CTRY_CD=AL3.COUNTRY_CD\nWHERE\n    /*v.country <> v.RCVCUSTCTRY\nAND v.country='606'\nAND*/ v.contractnumber <>'' \nfetch first 10000 rows only\nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "ds_sourceIPPF_RULES_BMSIWSERV",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V161S5P2.csv",
							"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT"
						}
					}
				]
			},
			{
				"name": "V161S8P1",
				"description": "PACT",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V161S5P2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT DISTINCT\n    1                    AS PROJ_WBS_NUM,\n    CO.ACCTGRP_DESC      AS PROJ_DESC,\n    CO.CNTRCT_BEGIN_DATE AS PROJ_PLANNED_STRT_DT,\n    CO.CNTRCT_END_DATE   AS PROJ_PLANNED_END_DT,\n    ''                   AS PRFT_CNTR_CD,\n    ''                   AS COST_CNTR_CD,\n    0                    AS APPLCNT_NUM,\n    ''                   AS APPLCNT_NM,\n    ''                   AS FUNCTL_AREA_CD,\n    ''                   AS CNTL_AREA_CD,\n    ''                   AS PROJ_PROF_CD,\n    ''                   AS PROJ_CRNCY_CD,\n    ''                   AS PROJ_TYP_CD,\n    CO.OWNING_COUNTRY_CD AS SAP_CMPNY_CD,\n    CO.OWNING_COUNTRY_CD AS BH_SAP_CMPNY_CD,\n    CO.ACCTGRP_ID        AS PROJ_WBS_ID,\n    'BMS'                AS APPL_IND\nFROM\n    BMSIW.ACCOUNT_UV WRK\nINNER JOIN\n    BMSIW.ACCOUNT_GROUP_UV CO\nON\n    WRK.ACCTGRP_ID = CO.ACCTGRP_ID\nAND WRK.CONTROL_GROUP_CD = CO.CONTROL_GROUP_CD\n/*INNER JOIN\n    BMSIW.T510BUS_UV BUS\nON\n    BUS.COUNTRY = WRK.OWNING_COUNTRY_CD\nAND BUS.COMPANYCODE = WRK.OWNING_COMPANY_CD\nAND BUS.BUSINESSTYPE = WRK.BUS_TYP_CD\nLEFT JOIN\n    BMSIW.T510CON_UV CO1\nON\n    CO.ACCTGRP_ID = CO1.CONTRACTNUMBER\nAND WRK.OWNING_COUNTRY_CD = CO1.COUNTRY\nAND CO.OWNING_COMPANY_CD = CO1.COMPANYCODE\nJOIN\n    BMSIW.COMPANY_REF_UV SC\nON\n    SC.COUNTRY_CD = WRK.OWNING_COUNTRY_CD\nAND SC.COMPANY_CD = WRK.OWNING_COMPANY_CD @{pipeline().parameters.p_IPPF_RULES_COMPANY_COND}\nWHERE\n    CO1.CONTRACTNUMBER IS NULL\nAND BUS.LOBID IN ('SO',\n                  'ITS',\n                  'MAI',\n                  'ISS',\n                  'EBH',\n                  'CLD',\n                  'CLO')\nAND CO.ACCTGRP_ID<>''\nAND WRK.STATUS IN ('O')\nAND BUS.BUSMEASUREDIV <> '16'\nAND WRK.ACCT_TYP_CD = 'C'\nAND WRK.OFFERING_COMP_CD <> ''\nAND WRK.OWNING_COUNTRY_CD IN\n    (\n        SELECT\n            CAST(AL1.CTRY_CD AS CHAR(4))\n        FROM\n            BMSIW.GEO_RGN_CTRY_UV AL1\n        JOIN\n            BMSIW.COUNTRY_REF_UV AL2\n        ON\n            AL1.CTRY_CD=AL2.COUNTRY_CD\n        AND AL1.RGN_LVL1_CD @{pipeline().parameters.p_IPPF_RULES_RGN_LVL1_CD}\n        AND AL1.CTRY_CD NOT @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\n        AND AL1.CTRY_CD NOT @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_MIGR}\n        AND AL2.STATUS='O'\n        WHERE\n            '@{pipeline().parameters.p_IPPF_RULES_INST}'<>'CDT - '||\n            '@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}'\n        OR  (\n                AL1.CTRY_CD @{pipeline().parameters.p_IPPF_RULES_COUNTRIES}\n            AND '@{pipeline().parameters.p_IPPF_RULES_INST}'='CDT - '||\n                '@{pipeline().parameters.p_IPPF_RULES_GEO_NAME}')\n        FETCH\n            FIRST 250 ROWS ONLY) WITH UR*/\nfetch first 10000 rows only;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "ds_sourceIPPF_RULES_BMSIWSERV",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V161S8P1.csv",
							"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT"
						}
					}
				]
			},
			{
				"name": "V161S10P1",
				"description": "Copy_of_ALLEGRO_PROJECT_HEADER",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V161S8P1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT\n    T1.WBS_NUM       AS PROJ_WBS_NUM ,\n    T1.SHORT_DESC    AS PROJ_NM ,\n    T1.PLAN_STRT_DT  AS PROJ_PLANNED_STRT_DT ,\n    T1.PLAN_CMPLN_DT AS PROJ_PLANNED_END_DT ,\n    /*CASE\n        WHEN T1.PRFT_CNTR_CD =''\n        THEN '-1'\n        ELSE T1.PRFT_CNTR_CD\n    END               AS PRFT_CNTR_CD ,*/\n    ' '               AS COST_CNTR_CD ,\n    T1.APPL_NUM       AS APPL_NUM ,\n    T1.APPL_NM        AS APPL_NM ,\n    T1.FUNCTL_AREA_CD AS FUNCTL_AREA_CD ,\n    T1.CNTL_PROJ_CD   AS CNTL_AREA_CD ,\n    T1.PROJ_PROF_CD   AS PROJ_PROF_CD ,\n    T1.PROJ_CRNCY_CD  AS PROJ_CRNCY_CD ,\n    T2.PROJ_TYP_CD    AS PROJ_TYP_CD ,\n    T1.SAP_CMPNY_CD   AS CMPNY_CD ,\n    T1.CHRG_CTRY_CD   AS CHRG_CTRY_CD ,\n    T1.WBS_ID         AS PROJ_ID ,\n    'BH'              AS APPL_IND\nFROM\n    BLUEPP.WBS_PROJ_HEADER_@{pipeline().parameters.p_IPPF_RULES_VIEW} T1\nINNER JOIN\n    BMSIW.COMPANY_REF_@{pipeline().parameters.p_IPPF_RULES_VIEW} SC\nON\n    SC.SAP_COMPANY_CD = T1.SAP_CMPNY_CD @{pipeline().parameters.p_IPPF_RULES_COMPANY_COND}\nLEFT JOIN\n    BLUEPP.WBS_ELEMENT_MASTER_@{pipeline().parameters.p_IPPF_RULES_VIEW} T2\nON\n    T1.WBS_ID = T2.WBS_ID\nWHERE\n    CAST(T1.CHRG_CTRY_CD AS CHAR(3)) @{pipeline().parameters.p_IPPF_RULES_COUNTRIES_BH}\nfetch first 10000 rows only;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "ds_sourceIPPF_RULES_BMSIWSERV",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V161S10P1.csv",
							"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT"
						}
					}
				]
			},
			{
				"name": "Transformation",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "V161S10P1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_LIPPFD0005_demo",
						"type": "DataFlowReference",
						"parameters": {
							"p_IPPF_RULES_SCHEME": {
								"value": "'@{pipeline().parameters.p_IPPF_RULES_SCHEME}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"V161S0P2": {
								"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT",
								"p_fileName": "V161S0P2.csv"
							},
							"V161S5P1": {
								"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT",
								"p_fileName": "V161S5P1.csv"
							},
							"V161S5P2": {
								"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT",
								"p_fileName": "V161S5P2.csv"
							},
							"V161S8P1": {
								"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT",
								"p_fileName": "V161S8P1.csv"
							},
							"V161S10P1": {
								"p_folder": "LIPPFD0005_PROJECT_HEADER_LOAD_INTGRT",
								"p_fileName": "V161S10P1.csv"
							},
							"V161S6": {
								"p_schema": {
									"value": "@{pipeline().parameters.p_IPPF_RULES_SCHEME}",
									"type": "Expression"
								},
								"p_table": "PROJECT_HEADER_LOAD"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "ir-azure-DataFlow",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Coarse"
				}
			}
		],
		"parameters": {
			"p_IPPF_RULES_COMPANY_COND": {
				"type": "String",
				"defaultValue": "and sc.COMPANY_CD like ('NEWIS%')"
			},
			"p_IPPF_RULES_CONTR_STATUS": {
				"type": "String",
				"defaultValue": "--AND      CO.CONTRACTSTATUS    <> 'N' "
			},
			"p_IPPF_RULES_COUNTRIES": {
				"type": "String",
				"defaultValue": "in (cast ('602' as char(3)), cast('618' as char(3)), cast('668' as char(3)), cast('678' as char(3)), cast('706' as char(3)), cast('726' as char(3)), cast('740' as char(3)), cast('755' as char(3)), cast('758' as char(3)), cast('764' as char(3)), cast('788' as char(3)), cast('820' as char(3)), cast('808' as char(3)), cast('822' as char(3)), cast('821' as char(3)), cast('832' as char(3)), cast('826' as char(3)), cast('846' as char(3)), cast('848' as char(3)), cast('864' as char(3)), cast('866' as char(3)), cast('862' as char(3)), cast('889' as char(3)), cast('865' as char(3)), cast('724' as char(3)), cast('702' as char(3)), cast('806' as char(3)), cast('675' as char(3)), cast('622' as char(3)), cast ('624' as char(3)))"
			},
			"p_IPPF_RULES_COUNTRIES_BH": {
				"type": "String",
				"defaultValue": "in (cast('358' as char(3)), cast('622' as char(3)), cast('724' as char(3)), cast('767' as char(3)), cast('854' as char(3)), cast('618' as char(3)), cast('848' as char(3)), cast('809' as char(3)), cast('913' as char(3)), cast('706' as char(3)),cast('623' as char(3)), cast('624' as char(3)), cast('653' as char(3)), cast('678' as char(3)),cast('702' as char(3)), cast('742' as char(3)),cast('788' as char(3)), cast('806' as char(3)), cast('812' as char(3)),cast('846' as char(3)))"
			},
			"p_IPPF_RULES_COUNTRIES_MIGR": {
				"type": "String",
				"defaultValue": "as char(3)),cast('702' as char(3)), cast('742' as char(3)),cast('788' as char(3)), cast('806' as char(3)), cast('812' as char(3)),cast('622' as char(3)), cast('846' as char(3)))"
			},
			"p_IPPF_RULES_DIVISIONS": {
				"type": "String",
				"defaultValue": "IN ('Z4', 'Z6', 'K5', 'Z8', '72', '7G', '7H', 'Z1', '7D', 'J9', '80', 'K4', 'K8', 'K9', 'T8', 'H5', '7Y', '20', 'G2', '48', '46', '30', '36', '2P', '8F', '7F', '2R', '1C', '4E', '70', '51', '66')"
			},
			"p_IPPF_RULES_GEO": {
				"type": "String",
				"defaultValue": "--AND    CO.GEO_SRC_CD = 'NA'    AND    WR.GEO_SRC_CD = 'NA'"
			},
			"p_IPPF_RULES_GEO_NAME": {
				"type": "String",
				"defaultValue": "EU"
			},
			"p_IPPF_RULES_INST": {
				"type": "String",
				"defaultValue": "CDT - EU"
			},
			"p_IPPF_RULES_RGN_LVL1_CD": {
				"type": "String",
				"defaultValue": "in (cast('EA' as char(2)),cast('EP' as char(2)),cast('EM' as char(2))) "
			},
			"p_IPPF_RULES_SCHEME": {
				"type": "String",
				"defaultValue": "dbo"
			},
			"p_IPPF_RULES_VIEW": {
				"type": "String",
				"defaultValue": "UV"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-12-14T06:48:51Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}