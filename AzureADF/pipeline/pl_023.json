{
	"name": "pl_023",
	"properties": {
		"activities": [
			{
				"name": "V177S0P2",
				"description": "Copy_of_DB2_Connector_96",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "select v.worknumber as WBS_ID_L2,v.worknumber as WBS_ID_L22  from bmsiw.t510wrk_uv v join\n(SELECT distinct v.RCVCUSTCTRY as SAP_CMPNY_CD1,v.contractnumber as PROJ_WBS_ID\nFROM BMSIW.t510wrk_uV           V \nJOIN  BMSIW.COUNTRY_REF_UV AL2 \nON v.COUNTRY=AL2.COUNTRY_CD\nJOIN  BMSIW.COUNTRY_REF_UV AL3\nON v.RCVCUSTCTRY=AL3.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL4\nON AL4.CTRY_CD=AL2.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL5\nON AL5.CTRY_CD=AL3.COUNTRY_CD\n   where v.country <> v.RCVCUSTCTRY \n   and v.country='606'\n and v.contractnumber <>''  \n) t on v.contractnumber = t.PROJ_WBS_ID where v.worknumber<>'' and  @{pipeline().parameters.p_IPPF_RULES_INSTANCE}='EU'  \nunion\nselect v.account_id as WBS_ID_L2,v.account_id as WBS_ID_L22  from BMSIW.ACCOUNT_UV v join\n(SELECT distinct  v.RCVCUSTCTRY as SAP_CMPNY_CD1,v.contractnumber as PROJ_WBS_ID\nFROM BMSIW.t510wrk_uV           V \nJOIN  BMSIW.COUNTRY_REF_UV AL2 \nON v.COUNTRY=AL2.COUNTRY_CD\nJOIN  BMSIW.COUNTRY_REF_UV AL3\nON v.RCVCUSTCTRY=AL3.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL4\nON AL4.CTRY_CD=AL2.COUNTRY_CD\nJOIN BMSIW.GEO_RGN_CTRY_UV AL5\nON AL5.CTRY_CD=AL3.COUNTRY_CD\n   where v.country <> v.RCVCUSTCTRY \n   and v.country='606'\n and v.contractnumber <>''  \n) t on v.ACCTGRP_ID  = t.PROJ_WBS_ID where v.account_id <>''  and  @{pipeline().parameters.p_IPPF_RULES_INSTANCE}='EU'  \nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceDB2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V177S0P2.csv",
							"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS"
						}
					}
				]
			},
			{
				"name": "V177S5P2",
				"description": "connect_to_FIW_current_data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V177S0P2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT\n\t    MC.RCTRYNUM           AS COUNTRY,\n                    LTRIM(RTRIM(MC.CONTRACT_NUM)) AS WBS_ID,\n                    UPPER(LTRIM(RTRIM(MC.PROJECTNUM)))  AS WBS_ID_L2,\n\t    MC.ACCTMO             AS ACTL_FINL_MO,\n\t    MC.ACCTYR             AS ACTL_FINL_YR,\n\t    MC.MAJOR              AS MAJOR,\n\t    MC.MINOR              AS MINOR,\n                    MC.LC                 AS LEDGER_CODE,\n                    LTRIM(RTRIM(CASE \n                                                    WHEN MC.RCTRYNUM ='912' AND MC.LCTRYNUM=' ' THEN '897'\n                                                    ELSE MC.LCTRYNUM \n                                             END)) AS LEDGER_COUNTRY,\n                    CASE \n                                     WHEN LENGTH(RTRIM(MC.CUSTNUM)) > 6 THEN SUBSTR(MC.CUSTNUM,3,6)\n\t                     ELSE MC.CUSTNUM\n\t    END                   AS CUSTOMER,\n\t    MC.RCURCODE           AS REC_CURRENCY,\n                    MC.REV_PLNREC         AS REV_REC_USD,\n\t    MC.REV_LOCREC         AS REV_REC_LCL,\n\t    MC.CST_PLNREC         AS CST_REC_USD,\n\t    MC.CST_LOCREC         AS CST_REC_LCL,\n\t    MC.ACCT                      AS VNDR_ACCT_NUM,\n                    MC.LAST_UPT_ID       AS USR_NM,\n                    MC.FEEDID                  AS FEEDID,\n                    CASE WHEN LENGTH(RTRIM(MC.SRC)) <3\n\t        THEN CONCAT ('0',MC.SRC)\n\t        ELSE MC.SRC\n                    END     AS SRC_ID,\n                    MC.FROM_PRODID as FROM_PRODID,\n                    cast(CASE \n                    WHEN TRANSLATE(MC.INVOICE_NUM,'', X'000102030405060E0F8065697175' ||  X'101112131415161718191A1B1C1D1E1F41',' ') <> MC.INVOICE_NUM\n                    THEN TRANSLATE(MC.INVOICE_NUM,'', X'000102030405060E0F8065697175' ||  X'101112131415161718191A1B1C1D1E1F41',' ') \n                    else MC.INVOICE_NUM\n                    end as char(12)) as INVOICE_NUM,\n                    --MC.INVOICE_NUM as INVOICE_NUM,\n                    MC.BMDIV as BMDIV,\n                    MC.REV_USD as REV_USD,\n                    MC.CST_USD as CST_USD,\n                    MC.FID,\n                    MC.CCTRYNUM,\n                    FS.FEEDID_DESCR as FEED_ID_DESC\n                   \n\tFROM\n\t    AIWCA.REV_COST_DC MC\n                LEFT JOIN AIWCA.FEEDID_R FS\n                ON MC.FEEDID=FS.FEEDID\n\tWHERE\n                    ((MC.RCTRYNUM in (@{pipeline().parameters.p_COUNTRIES}) or (@{pipeline().parameters.p_IPPF_RULES_INSTANCE}='EU'  and MC.RCTRYNUM='724' and MC.LCTRYNUM='606'))\n                    @{pipeline().parameters.p_IPPF_RULES_ACTUAL_COUNTRIES_NEW})\n                    AND (MC.REV_PLNREC<>0.00 OR  MC.REV_LOCREC<>0.00 OR MC.CST_PLNREC<>0.00 OR MC.CST_LOCREC<>0.00 ) \n                    AND (RTRIM(MC.CONTRACT_NUM)<>'' OR RTRIM(MC.PROJECTNUM)<>'')    \n                   AND (MC.MAJOR  LIKE '3%' OR MC.MAJOR LIKE '4%' OR MC.MAJOR in('535','545'))\n                  AND MC.BMDIV !='8D'  \n\t--    AND MC.BMDIV @{pipeline().parameters.p_IPPF_RULES_ACTUAL_DIVISIONS}\n                 and MC.CONTRACT_NUM<>'4912051178'    \n                 and @{pipeline().parameters.p_count_currently_data} <> 0                \n\nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceDB2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V177S5P2.csv",
							"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS"
						}
					}
				]
			},
			{
				"name": "V177S5P1",
				"description": "connect_to_FIW",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V177S5P2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT\n\t    MC.RCTRYNUM           AS COUNTRY,\n                    LTRIM(RTRIM(MC.CONTRACT_NUM)) AS WBS_ID,\n                    UPPER(LTRIM(RTRIM(MC.PROJECTNUM)))  AS WBS_ID_L2,\n\t    MC.ACCTMO             AS ACTL_FINL_MO,\n\t    MC.ACCTYR             AS ACTL_FINL_YR,\n\t    MC.MAJOR              AS MAJOR,\n\t    MC.MINOR              AS MINOR,\n                    MC.LC                 AS LEDGER_CODE,\n                    LTRIM(RTRIM(CASE \n                                                    WHEN MC.RCTRYNUM ='912' AND MC.LCTRYNUM=' ' THEN '897'\n                                                    ELSE MC.LCTRYNUM \n                                             END)) AS LEDGER_COUNTRY,\n                    CASE \n                                     WHEN LENGTH(RTRIM(MC.CUSTNUM)) > 6 THEN SUBSTR(MC.CUSTNUM,3,6)\n\t                     ELSE MC.CUSTNUM\n\t    END                   AS CUSTOMER,\n\t    MC.RCURCODE           AS REC_CURRENCY,\n                    MC.REV_PLNREC         AS REV_REC_USD,\n\t    MC.REV_LOCREC         AS REV_REC_LCL,\n\t    MC.CST_PLNREC         AS CST_REC_USD,\n\t    MC.CST_LOCREC         AS CST_REC_LCL,\n\t    MC.ACCT                      AS VNDR_ACCT_NUM,\n                    MC.LAST_UPT_ID       AS USR_NM,\n                    MC.FEEDID                  AS FEEDID,\n                    CASE WHEN LENGTH(RTRIM(MC.SRC)) <3\n\t        THEN CONCAT ('0',MC.SRC)\n\t        ELSE MC.SRC\n                    END     AS SRC_ID,\n                    MC.FROM_PRODID as FROM_PRODID,\n                    cast(CASE \n                    WHEN TRANSLATE(MC.INVOICE_NUM,'', X'000102030405060E0F8065697175' ||  X'101112131415161718191A1B1C1D1E1F41',' ') <> MC.INVOICE_NUM\n                    THEN TRANSLATE(MC.INVOICE_NUM,'', X'000102030405060E0F8065697175' ||  X'101112131415161718191A1B1C1D1E1F41',' ') \n                    else MC.INVOICE_NUM\n                    end as char(12)) as INVOICE_NUM,\n                    --MC.INVOICE_NUM as INVOICE_NUM,\n                    MC.BMDIV as BMDIV,\n                    MC.REV_USD as REV_USD,\n                    MC.CST_USD as CST_USD,\n                    MC.FID,\n                    MC.CCTRYNUM,\n                    FS.FEEDID_DESCR as FEED_ID_DESC\n                   \n\tFROM\n\t    AIWCA.REV_COST_D MC\n                LEFT JOIN AIWCA.FEEDID_R FS\n                ON MC.FEEDID=FS.FEEDID\n\tWHERE\n                    ((MC.RCTRYNUM in (@{pipeline().parameters.p_COUNTRIES}) or (@{pipeline().parameters.p_IPPF_RULES_INSTANCE}='EU'  and MC.RCTRYNUM='724' and MC.LCTRYNUM='606'))\n                    @{pipeline().parameters.p_IPPF_RULES_ACTUAL_COUNTRIES_NEW})\n                    AND (MC.REV_PLNREC<>0.00 OR  MC.REV_LOCREC<>0.00 OR MC.CST_PLNREC<>0.00 OR MC.CST_LOCREC<>0.00 ) \n                    AND (RTRIM(MC.CONTRACT_NUM)<>'' OR RTRIM(MC.PROJECTNUM)<>'')    \n                    AND (MC.MAJOR  LIKE '3%' OR MC.MAJOR LIKE '4%' OR MC.MAJOR in('535','545'))\n                    AND MC.BMDIV !='8D'  \n\t--    AND MC.BMDIV @{pipeline().parameters.p_IPPF_RULES_ACTUAL_DIVISIONS}\n                   and MC.CONTRACT_NUM<>'4912051178'    \n                   and @{pipeline().parameters.p_count_currently_data}  =  0 \n                   and MC.ACCTYR   = '@{pipeline().parameters.p_ACTL_FINL_YR}'\n                   and MC.ACCTMO  =  '@{pipeline().parameters.p_ACTL_FINL_MO}' \n                  \nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceDB2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V177S5P1.csv",
							"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS"
						}
					}
				]
			},
			{
				"name": "V177S5P3",
				"description": "connect_to_FIW_previous_year",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "V177S5P1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "SELECT\n\t    MC.RCTRYNUM           AS COUNTRY,\n                    LTRIM(RTRIM(MC.CONTRACT_NUM)) AS WBS_ID,\n                    UPPER(LTRIM(RTRIM(MC.PROJECTNUM)))  AS WBS_ID_L2,\n\t    MC.ACCTMO             AS ACTL_FINL_MO,\n\t    MC.ACCTYR             AS ACTL_FINL_YR,\n\t    MC.MAJOR              AS MAJOR,\n\t    MC.MINOR              AS MINOR,\n                    MC.LC                 AS LEDGER_CODE,\n                    LTRIM(RTRIM(CASE \n                                                    WHEN MC.RCTRYNUM ='912' AND MC.LCTRYNUM=' ' THEN '897'\n                                                    ELSE MC.LCTRYNUM \n                                             END)) AS LEDGER_COUNTRY,\n                    CASE \n                                     WHEN LENGTH(RTRIM(MC.CUSTNUM)) > 6 THEN SUBSTR(MC.CUSTNUM,3,6)\n\t                     ELSE MC.CUSTNUM\n\t    END                   AS CUSTOMER,\n\t    MC.RCURCODE           AS REC_CURRENCY,\n                    MC.REV_PLNREC         AS REV_REC_USD,\n\t    MC.REV_LOCREC         AS REV_REC_LCL,\n\t    MC.CST_PLNREC         AS CST_REC_USD,\n\t    MC.CST_LOCREC         AS CST_REC_LCL,\n\t    MC.ACCT                      AS VNDR_ACCT_NUM,\n                    MC.LAST_UPT_ID       AS USR_NM,\n                    MC.FEEDID                  AS FEEDID,\n                    CASE WHEN LENGTH(RTRIM(MC.SRC)) <3\n\t        THEN CONCAT ('0',MC.SRC)\n\t        ELSE MC.SRC\n                    END     AS SRC_ID,\n                    MC.FROM_PRODID as FROM_PRODID,\n                    cast(CASE \n                    WHEN TRANSLATE(MC.INVOICE_NUM,'', X'000102030405060E0F8065697175' ||  X'101112131415161718191A1B1C1D1E1F41',' ') <> MC.INVOICE_NUM\n                    THEN TRANSLATE(MC.INVOICE_NUM,'', X'000102030405060E0F8065697175' ||  X'101112131415161718191A1B1C1D1E1F41',' ') \n                    else MC.INVOICE_NUM\n                    end as char(12)) as INVOICE_NUM,\n                    --MC.INVOICE_NUM as INVOICE_NUM,\n                    MC.BMDIV as BMDIV,\n                    MC.REV_USD as REV_USD,\n                    MC.CST_USD as CST_USD,\n                    MC.FID,\n                    MC.CCTRYNUM,\n                    FS.FEEDID_DESCR as FEED_ID_DESC\n              \n\tFROM\n\t    AIWPA.REV_COST_D MC\n                LEFT JOIN AIWCA.FEEDID_R FS\n                ON MC.FEEDID=FS.FEEDID     \n\tWHERE\n                   ((MC.RCTRYNUM in (@{pipeline().parameters.p_COUNTRIES}) or (@{pipeline().parameters.p_IPPF_RULES_INSTANCE}='EU'  and MC.RCTRYNUM='724' and MC.LCTRYNUM='606'))\n                    @{pipeline().parameters.p_IPPF_RULES_ACTUAL_COUNTRIES_NEW})\n                    AND (MC.REV_PLNREC<>0.00 OR  MC.REV_LOCREC<>0.00 OR MC.CST_PLNREC<>0.00 OR MC.CST_LOCREC<>0.00 ) \n                    AND (RTRIM(MC.CONTRACT_NUM)<>'' OR RTRIM(MC.PROJECTNUM)<>'')    \n                   AND (MC.MAJOR  LIKE '3%' OR MC.MAJOR LIKE '4%' OR MC.MAJOR in('535','545'))\n                  AND MC.BMDIV !='8D'\n\t--    AND MC.BMDIV @{pipeline().parameters.p_IPPF_RULES_ACTUAL_DIVISIONS}\n                   and MC.CONTRACT_NUM<>'4912051178'    \n                   and @{pipeline().parameters.p_count_currently_data}  =  0 \n                   and MC.ACCTYR   = '@{pipeline().parameters.p_PREV_YEAR}'\n                   and MC.ACCTMO  =  '12' \n\nWITH UR",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sourceDB2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sourceCSV",
						"type": "DatasetReference",
						"parameters": {
							"p_fileName": "V177S5P3.csv",
							"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS"
						}
					}
				]
			},
			{
				"name": "Transformation",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "V177S5P3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_023",
						"type": "DataFlowReference",
						"parameters": {
							"p_IPPF_RULES_SCHEME": {
								"value": "'@{pipeline().parameters.p_IPPF_RULES_SCHEME}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"V177S0P2": {
								"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS",
								"p_fileName": "V177S0P2.csv"
							},
							"V177S5P2": {
								"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS",
								"p_fileName": "V177S5P2.csv"
							},
							"V177S5P1": {
								"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS",
								"p_fileName": "V177S5P1.csv"
							},
							"V177S5P3": {
								"p_folder": "LIPPFD0023_WBS_ACTUAL_FULL_LOAD_BMS",
								"p_fileName": "V177S5P3.csv"
							},
							"V177S6": {
								"p_schema": {
									"value": "@{pipeline().parameters.p_IPPF_RULES_SCHEME}",
									"type": "Expression"
								},
								"p_table": "WBS_ACTUAL_FULL_LOAD"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "ir-azure-DataFlow",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "None"
				}
			}
		],
		"parameters": {
			"p_ACTL_FINL_MO": {
				"type": "String"
			},
			"p_ACTL_FINL_YR": {
				"type": "String"
			},
			"p_COUNTRIES": {
				"type": "String"
			},
			"p_IPPF_RULES_ACTUAL_COUNTRIES_NEW": {
				"type": "String"
			},
			"p_IPPF_RULES_ACTUAL_DIVISIONS": {
				"type": "String"
			},
			"p_IPPF_RULES_INSTANCE": {
				"type": "String"
			},
			"p_IPPF_RULES_SCHEME": {
				"type": "String"
			},
			"p_PREV_YEAR": {
				"type": "String"
			},
			"p_count_currently_data": {
				"type": "String"
			}
		},
		"annotations": []
	}
}