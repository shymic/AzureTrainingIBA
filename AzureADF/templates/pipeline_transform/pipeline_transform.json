{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureBlobStorage1": {
			"type": "string"
		},
		"Local_SqlServer": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_transform')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform",
								"type": "DataFlowReference"
							},
							"integrationRuntime": {
								"referenceName": "ir-azure-DataFlow",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "Load STAG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "DELETE from FORECAST_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Output",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Target_table",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "obachilo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform')]",
				"[concat(variables('factoryId'), '/datasets/Output')]",
				"[concat(variables('factoryId'), '/datasets/Target_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSV_wbs_element",
								"type": "DatasetReference"
							},
							"name": "wbsElement"
						},
						{
							"dataset": {
								"referenceName": "CSV_cost_element",
								"type": "DatasetReference"
							},
							"name": "CostElement"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output",
								"type": "DatasetReference"
							},
							"name": "OutputFile"
						}
					],
					"transformations": [
						{
							"name": "InnerJoin"
						},
						{
							"name": "Transformer63",
							"description": "select columns"
						},
						{
							"name": "AddColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          WBS_ID as string,",
						"          COST_ELEM_CD as string,",
						"          WBS_ELEM_OC_AMT as string,",
						"          WBS_ELEM_CC_AMT as string,",
						"          OBJ_CRNCY_CD as string,",
						"          CNTRL_CRNCY_CD as string,",
						"          MONTH_NUM as string,",
						"          YEAR_NUM as string,",
						"          TXN_CRNCY_CD as string,",
						"          WBS_LVL_NUM as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     maxColumns: 200,",
						"     partitionBy('hash', 1)) ~> wbsElement",
						"source(output(",
						"          COST_ELEM_CD as string,",
						"          VAL_CAT_CD as string,",
						"          REV_IND as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CostElement",
						"wbsElement, CostElement join(wbsElement@COST_ELEM_CD == CostElement@COST_ELEM_CD,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> InnerJoin",
						"AddColumns select(mapColumn(",
						"          WBS_ID,",
						"          COST_ELEM_CD = wbsElement@COST_ELEM_CD,",
						"          VAL_CAT_CD,",
						"          FRCST_FINL_MO = MONTH_NUM,",
						"          FRCST_FINL_YR = YEAR_NUM,",
						"          OBJ_CRNCY_CD,",
						"          OBJ_AMT = WBS_ELEM_OC_AMT,",
						"          CONTRL_AMT,",
						"          CONTRL_CRNCY_CD = CNTRL_CRNCY_CD,",
						"          TXN_AMT,",
						"          TXN_CRNCY_CD",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Transformer63",
						"InnerJoin derive(TXN_AMT = case(REV_IND=='1',toString(toDecimal(WBS_ELEM_OC_AMT)*-1),WBS_ELEM_OC_AMT),",
						"          TXN_CRNCY_CD = OBJ_CRNCY_CD,",
						"          CONTRL_AMT = case(REV_IND=='1',toString(toDecimal(WBS_ELEM_OC_AMT)*-1),WBS_ELEM_OC_AMT)) ~> AddColumns",
						"Transformer63 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['outputdata.csv'],",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> OutputFile"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_wbs_element')]",
				"[concat(variables('factoryId'), '/datasets/CSV_cost_element')]",
				"[concat(variables('factoryId'), '/datasets/Output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage1')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "obachilo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "outputdata.csv",
						"folderPath": "output",
						"container": "obachilo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Target_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('Local_SqlServer')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "obachilo"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FORECAST_LOAD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_wbs_element')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage1')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "obachilo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "wbs_element_cost.csv",
						"container": "obachilo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WBS_ID",
						"type": "String"
					},
					{
						"name": "COST_ELEM_CD",
						"type": "String"
					},
					{
						"name": "WBS_ELEM_OC_AMT",
						"type": "String"
					},
					{
						"name": "WBS_ELEM_CC_AMT",
						"type": "String"
					},
					{
						"name": "OBJ_CRNCY_CD",
						"type": "String"
					},
					{
						"name": "CNTRL_CRNCY_CD",
						"type": "String"
					},
					{
						"name": "MONTH_NUM",
						"type": "String"
					},
					{
						"name": "YEAR_NUM",
						"type": "String"
					},
					{
						"name": "TXN_CRNCY_CD",
						"type": "String"
					},
					{
						"name": "WBS_LVL_NUM",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_cost_element')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage1')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "obachilo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cnmn_cost_element.csv",
						"container": "obachilo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COST_ELEM_CD",
						"type": "String"
					},
					{
						"name": "VAL_CAT_CD",
						"type": "String"
					},
					{
						"name": "REV_IND",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}